{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib.ts","webpack:///./src/TypedEvent.ts","webpack:///./src/Item.ts","webpack:///./src/items/StaticGraph.ts","webpack:///./src/items/Icon.ts","webpack:///./src/items/ColorCloud.ts","webpack:///./src/items/Group.ts","webpack:///./src/items/Clock/index.ts","webpack:///./src/items/Box.ts","webpack:///./src/items/Line.ts","webpack:///./src/items/Label.ts","webpack:///./src/items/SimpleValue.ts","webpack:///./src/items/EventsHistory.ts","webpack:///./src/items/Percentile.ts","webpack:///./src/items/DonutGraph.ts","webpack:///./src/items/BarsGraph.ts","webpack:///./src/items/ModuleGraph.ts","webpack:///./src/items/Service.ts","webpack:///./src/VisualConsole.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parseIntOr","defaultValue","length","isNaN","parseInt","stringIsEmpty","notEmptyStringOr","parseBoolean","padLeft","pad","diffLength","substr","Math","abs","substring","repeatTimes","floor","restLength","newPad","sizePropsDecoder","data","width","height","TypeError","modulePropsDecoder","id","moduleName","__assign","metaconsoleId","agentId","agentName","agentProps","agentPropsDecoder","linkedVCPropsDecoder","linkedLayoutId","linkedLayoutAgentId","linkedLayoutStatusProps","linkedLayoutStatusType","weight","linkedLayoutStatusTypeWeight","warningThreshold","linkedLayoutStatusTypeWarningThreshold","criticalThreshold","linkedLayoutStatusTypeCriticalThreshold","linkedLayoutBaseProps","prefixedCssRules","ruleName","ruleValue","rule","decodeBase64","input","decodeURIComponent","escape","window","atob","_this","this","listeners","listenersOncer","on","listener","push","dispose","off","once","callbackIndex","indexOf","splice","emit","event","forEach","pipe","te","e","parseLabelPosition","labelPosition","itemBasePropsDecoder","type","Item_assign","label","isLinkEnabled","link","isOnTop","parentId","aclGroupId","x","y","positionPropsDecoder","Item","VisualConsoleItem","props","clickEventManager","src_TypedEvent","removeEventManager","disposables","itemProps","elementRef","createContainerDomElement","labelElementRef","createLabelDomElement","childElementRef","createDomElement","append","resizeElement","changeLabelPosition","box","document","createElement","href","className","style","zIndex","left","top","onclick","nativeEvent","element","innerHTML","newProps","prevProps","shouldBeUpdated","render","positionChanged","moveElement","sizeChanged","container","parentNode","replaceChild","remove","disposable","ignored","prevPosition","newPosition","position","flexDirection","move","prevSize","newSize","resize","onClick","onRemove","parseShowLastValueTooltip","showLastValueTooltip","staticGraphPropsDecoder","imageSrc","StaticGraph_assign","statusImageSrc","lastValue","_super","StaticGraph","__extends","img","src","setAttribute","alt","iconPropsDecoder","Icon_assign","Icon","Icon_extends","colorCloudPropsDecoder","color","ColorCloud_assign","ColorCloud_svgNS","ColorCloud","ColorCloud_extends","createSvgElement","gradientId","svg","createElementNS","defs","radialGradient","stop0","stop100","circle","groupPropsDecoder","groupId","Group_assign","Group","Group_extends","parseClockType","clockType","parseClockFormat","clockFormat","clockPropsDecoder","clockTimezone","Clock_assign","clockTimezoneOffset","showClockTimezone","items_Clock","Clock","intervalRef","startTick","createClock","TICK_INTERVAL","Clock_extends","stopTick","clearInterval","handler","interval","setInterval","_a","getElementSize","newWidth","newHeight","createAnalogicClock","createDigitalClock","Error","svgNS","colors","div","clockFace","clockFaceBackground","timezoneComplication","textContent","marksGroup","mainMarkGroup","mark1a","mark1b","mark","hourHand","hourHandA","hourHandB","minuteHand","minuteHandA","minuteHandB","minuteHandPin","secondHand","secondHandBar","secondHandPin","pin","date","getDate","seconds","getSeconds","minutes","getMinutes","secAngle","minuteAngle","hourAngle","getHours","join","tzFontSizeMultiplier","timeFontSize","dateFontSize","baseTimeFontSize","tzFontSize","min","dateElem","getDigitalDate","fontSize","timeElem","getDigitalTime","tzElem","Date","targetTZOffset","localTZOffset","getTimezoneOffset","utimestamp","getTime","initialDate","getMonth","getFullYear","diameter","boxPropsDecoder","Box_assign","borderWidth","borderColor","fillColor","Box","Box_extends","boxSizing","backgroundColor","borderStyle","maxBorderWidth","linePropsDecoder","Line_assign","startPosition","startX","startY","endPosition","endX","endY","lineWidth","Line","extractBoxSizeAndPosition","Line_extends","toString","line","labelPropsDecoder","Label_assign","Label","Label_extends","parseValueType","valueType","parseProcessValue","processValue","simpleValuePropsDecoder","SimpleValue_assign","period","SimpleValue","SimpleValue_extends","text","replace","eventsHistoryPropsDecoder","html","encodedHtml","EventsHistory_assign","maxTime","EventsHistory","EventsHistory_extends","extractPercentileType","extractValueType","percentilePropsDecoder","Percentile_assign","percentileType","minValue","maxValue","labelColor","parseFloat","unit","Percentile_svgNS","Percentile","Percentile_extends","background","progress","getProgress","backgroundRect","progressRect","backgroundCircle","progressCircle","donutGraphPropsDecoder","DonutGraph_assign","DonutGraph","DonutGraph_extends","barsGraphPropsDecoder","BarsGraph_assign","BarsGraph","BarsGraph_extends","moduleGraphPropsDecoder","ModuleGraph_assign","ModuleGraph","ModuleGraph_extends","servicePropsDecoder","encodedTitle","serviceId","Service_assign","Service","Service_extends","itemInstanceFrom","items_StaticGraph","items_ModuleGraph","items_SimpleValue","items_Percentile","items_Label","items_Icon","items_Service","items_Group","items_Box","items_Line","items_EventsHistory","items_DonutGraph","items_BarsGraph","items_ColorCloud","VisualConsole","items","elementsById","elementIds","relations","handleElementClick","handleElementRemove","filter","clearRelations","containerRef","_props","backgroundURL","isFavorite","relationLineWidth","VisualConsole_assign","visualConsolePropsDecoder","sort","a","b","item","itemInstance","error","console","log","message","buildRelations","map","_","updateElements","itemIds","decodeProps","backgroundImage","elements","parent_1","child","addRelationLine","itemId","ids","split","Number","childId","getRelationLine","identifier","parent","clientWidth","clientHeight","src_VisualConsole"],"mappings":"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","file":"vc.main.66fed557.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import {\n  UnknownObject,\n  Position,\n  Size,\n  WithAgentProps,\n  WithModuleProps,\n  LinkedVisualConsoleProps,\n  LinkedVisualConsolePropsStatus\n} from \"./types\";\n\n/**\n * Return a number or a default value from a raw value.\n * @param value Raw value from which we will try to extract a valid number.\n * @param defaultValue Default value to use if we cannot extract a valid number.\n * @return A valid number or the default value.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function parseIntOr<T>(value: any, defaultValue: T): number | T {\n  if (typeof value === \"number\") return value;\n  if (typeof value === \"string\" && value.length > 0 && !isNaN(parseInt(value)))\n    return parseInt(value);\n  else return defaultValue;\n}\n\n/**\n * Return a number or a default value from a raw value.\n * @param value Raw value from which we will try to extract a valid number.\n * @param defaultValue Default value to use if we cannot extract a valid number.\n * @return A valid number or the default value.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function parseFloatOr<T>(value: any, defaultValue: T): number | T {\n  if (typeof value === \"number\") return value;\n  if (\n    typeof value === \"string\" &&\n    value.length > 0 &&\n    !isNaN(parseFloat(value))\n  )\n    return parseFloat(value);\n  else return defaultValue;\n}\n\n/**\n * Check if a string exists and it's not empty.\n * @param value Value to check.\n * @return The check result.\n */\nexport function stringIsEmpty(value?: string | null): boolean {\n  return value == null || value.length === 0;\n}\n\n/**\n * Return a not empty string or a default value from a raw value.\n * @param value Raw value from which we will try to extract a non empty string.\n * @param defaultValue Default value to use if we cannot extract a non empty string.\n * @return A non empty string or the default value.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function notEmptyStringOr<T>(value: any, defaultValue: T): string | T {\n  return typeof value === \"string\" && value.length > 0 ? value : defaultValue;\n}\n\n/**\n * Return a boolean from a raw value.\n * @param value Raw value from which we will try to extract the boolean.\n * @return A valid boolean value. false by default.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function parseBoolean(value: any): boolean {\n  if (typeof value === \"boolean\") return value;\n  else if (typeof value === \"number\") return value > 0;\n  else if (typeof value === \"string\") return value === \"1\" || value === \"true\";\n  else return false;\n}\n\n/**\n * Pad the current string with another string (multiple times, if needed)\n * until the resulting string reaches the given length.\n * The padding is applied from the start (left) of the current string.\n * @param value Text that needs to be padded.\n * @param length Length of the returned text.\n * @param pad Text to add.\n * @return Padded text.\n */\nexport function padLeft(\n  value: string | number,\n  length: number,\n  pad: string | number = \" \"\n): string {\n  if (typeof value === \"number\") value = `${value}`;\n  if (typeof pad === \"number\") pad = `${pad}`;\n\n  const diffLength = length - value.length;\n  if (diffLength === 0) return value;\n  if (diffLength < 0) return value.substr(Math.abs(diffLength));\n\n  if (diffLength === pad.length) return `${pad}${value}`;\n  if (diffLength < pad.length) return `${pad.substring(0, diffLength)}${value}`;\n\n  const repeatTimes = Math.floor(diffLength / pad.length);\n  const restLength = diffLength - pad.length * repeatTimes;\n\n  let newPad = \"\";\n  for (let i = 0; i < repeatTimes; i++) newPad += pad;\n\n  if (restLength === 0) return `${newPad}${value}`;\n  return `${newPad}${pad.substring(0, restLength)}${value}`;\n}\n\n/* Decoders */\n\n/**\n * Build a valid typed object from a raw object.\n * @param data Raw object.\n * @return An object representing the position.\n */\nexport function positionPropsDecoder(data: UnknownObject): Position {\n  return {\n    x: parseIntOr(data.x, 0),\n    y: parseIntOr(data.y, 0)\n  };\n}\n\n/**\n * Build a valid typed object from a raw object.\n * @param data Raw object.\n * @return An object representing the size.\n * @throws Will throw a TypeError if the width and height are not valid numbers.\n */\nexport function sizePropsDecoder(data: UnknownObject): Size | never {\n  if (\n    data.width == null ||\n    isNaN(parseInt(data.width)) ||\n    data.height == null ||\n    isNaN(parseInt(data.height))\n  ) {\n    throw new TypeError(\"invalid size.\");\n  }\n\n  return {\n    width: parseInt(data.width),\n    height: parseInt(data.height)\n  };\n}\n\n/**\n * Build a valid typed object from a raw object.\n * @param data Raw object.\n * @return An object representing the agent properties.\n */\nexport function agentPropsDecoder(data: UnknownObject): WithAgentProps {\n  // Object destructuring: http://es6-features.org/#ObjectMatchingShorthandNotation\n  const { metaconsoleId, agentId: id, agentName: name } = data;\n\n  const agentProps: WithAgentProps = {\n    agentId: parseIntOr(id, null),\n    agentName: typeof name === \"string\" && name.length > 0 ? name : null\n  };\n\n  return metaconsoleId != null\n    ? {\n        metaconsoleId,\n        ...agentProps // Object spread: http://es6-features.org/#SpreadOperator\n      }\n    : agentProps;\n}\n\n/**\n * Build a valid typed object from a raw object.\n * @param data Raw object.\n * @return An object representing the module and agent properties.\n */\nexport function modulePropsDecoder(data: UnknownObject): WithModuleProps {\n  // Object destructuring: http://es6-features.org/#ObjectMatchingShorthandNotation\n  const { moduleId: id, moduleName: name } = data;\n\n  return {\n    moduleId: parseIntOr(id, null),\n    moduleName: typeof name === \"string\" && name.length > 0 ? name : null,\n    ...agentPropsDecoder(data) // Object spread: http://es6-features.org/#SpreadOperator\n  };\n}\n\n/**\n * Build a valid typed object from a raw object.\n * @param data Raw object.\n * @return An object representing the linked visual console properties.\n * @throws Will throw a TypeError if the status calculation properties are invalid.\n */\nexport function linkedVCPropsDecoder(\n  data: UnknownObject\n): LinkedVisualConsoleProps | never {\n  // Object destructuring: http://es6-features.org/#ObjectMatchingShorthandNotation\n  const {\n    metaconsoleId,\n    linkedLayoutId: id,\n    linkedLayoutAgentId: agentId\n  } = data;\n\n  let linkedLayoutStatusProps: LinkedVisualConsolePropsStatus = {\n    linkedLayoutStatusType: \"default\"\n  };\n  switch (data.linkedLayoutStatusType) {\n    case \"weight\": {\n      const weight = parseIntOr(data.linkedLayoutStatusTypeWeight, null);\n      if (weight == null)\n        throw new TypeError(\"invalid status calculation properties.\");\n\n      if (data.linkedLayoutStatusTypeWeight)\n        linkedLayoutStatusProps = {\n          linkedLayoutStatusType: \"weight\",\n          linkedLayoutStatusTypeWeight: weight\n        };\n      break;\n    }\n    case \"service\": {\n      const warningThreshold = parseIntOr(\n        data.linkedLayoutStatusTypeWarningThreshold,\n        null\n      );\n      const criticalThreshold = parseIntOr(\n        data.linkedLayoutStatusTypeCriticalThreshold,\n        null\n      );\n      if (warningThreshold == null || criticalThreshold == null) {\n        throw new TypeError(\"invalid status calculation properties.\");\n      }\n\n      linkedLayoutStatusProps = {\n        linkedLayoutStatusType: \"service\",\n        linkedLayoutStatusTypeWarningThreshold: warningThreshold,\n        linkedLayoutStatusTypeCriticalThreshold: criticalThreshold\n      };\n      break;\n    }\n  }\n\n  const linkedLayoutBaseProps = {\n    linkedLayoutId: parseIntOr(id, null),\n    linkedLayoutAgentId: parseIntOr(agentId, null),\n    ...linkedLayoutStatusProps // Object spread: http://es6-features.org/#SpreadOperator\n  };\n\n  return metaconsoleId != null\n    ? {\n        metaconsoleId,\n        ...linkedLayoutBaseProps // Object spread: http://es6-features.org/#SpreadOperator\n      }\n    : linkedLayoutBaseProps;\n}\n\n/**\n * To get a CSS rule with the most used prefixes.\n * @param ruleName Name of the CSS rule.\n * @param ruleValue Value of the CSS rule.\n * @return An array of rules with the prefixes applied.\n */\nexport function prefixedCssRules(\n  ruleName: string,\n  ruleValue: string\n): string[] {\n  const rule = `${ruleName}: ${ruleValue};`;\n  return [\n    `-webkit-${rule}`,\n    `-moz-${rule}`,\n    `-ms-${rule}`,\n    `-o-${rule}`,\n    `${rule}`\n  ];\n}\n\n/**\n * Decode a base64 string.\n * @param input Data encoded using base64.\n * @return Decoded data.\n */\nexport function decodeBase64(input: string): string {\n  return decodeURIComponent(escape(window.atob(input)));\n}\n","export interface Listener<T> {\n  (event: T): void;\n}\n\nexport interface Disposable {\n  dispose: () => void;\n}\n\n/** passes through events as they happen. You will not get events from before you start listening */\nexport default class TypedEvent<T> {\n  private listeners: Listener<T>[] = [];\n  private listenersOncer: Listener<T>[] = [];\n\n  public on = (listener: Listener<T>): Disposable => {\n    this.listeners.push(listener);\n    return {\n      dispose: () => this.off(listener)\n    };\n  };\n\n  public once = (listener: Listener<T>): void => {\n    this.listenersOncer.push(listener);\n  };\n\n  public off = (listener: Listener<T>): void => {\n    const callbackIndex = this.listeners.indexOf(listener);\n    if (callbackIndex > -1) this.listeners.splice(callbackIndex, 1);\n  };\n\n  public emit = (event: T): void => {\n    /** Update any general listeners */\n    this.listeners.forEach(listener => listener(event));\n\n    /** Clear the `once` queue */\n    this.listenersOncer.forEach(listener => listener(event));\n    this.listenersOncer = [];\n  };\n\n  public pipe = (te: TypedEvent<T>): Disposable => this.on(e => te.emit(e));\n}\n","import { Position, Size, UnknownObject } from \"./types\";\nimport {\n  sizePropsDecoder,\n  positionPropsDecoder,\n  parseIntOr,\n  parseBoolean,\n  notEmptyStringOr\n} from \"./lib\";\nimport TypedEvent, { Listener, Disposable } from \"./TypedEvent\";\n\n// Enum: https://www.typescriptlang.org/docs/handbook/enums.html.\nexport const enum ItemType {\n  STATIC_GRAPH = 0,\n  MODULE_GRAPH = 1,\n  SIMPLE_VALUE = 2,\n  PERCENTILE_BAR = 3,\n  LABEL = 4,\n  ICON = 5,\n  SIMPLE_VALUE_MAX = 6,\n  SIMPLE_VALUE_MIN = 7,\n  SIMPLE_VALUE_AVG = 8,\n  PERCENTILE_BUBBLE = 9,\n  SERVICE = 10,\n  GROUP_ITEM = 11,\n  BOX_ITEM = 12,\n  LINE_ITEM = 13,\n  AUTO_SLA_GRAPH = 14,\n  CIRCULAR_PROGRESS_BAR = 15,\n  CIRCULAR_INTERIOR_PROGRESS_BAR = 16,\n  DONUT_GRAPH = 17,\n  BARS_GRAPH = 18,\n  CLOCK = 19,\n  COLOR_CLOUD = 20\n}\n\n// Base item properties. This interface should be extended by the item implementations.\nexport interface ItemProps extends Position, Size {\n  readonly id: number;\n  readonly type: ItemType;\n  label: string | null;\n  labelPosition: \"up\" | \"right\" | \"down\" | \"left\";\n  isLinkEnabled: boolean;\n  link: string | null;\n  isOnTop: boolean;\n  parentId: number | null;\n  aclGroupId: number | null;\n}\n\n// FIXME: Fix type compatibility.\nexport interface ItemClickEvent<Props extends ItemProps> {\n  // data: Props;\n  data: UnknownObject;\n  nativeEvent: Event;\n}\n\n// FIXME: Fix type compatibility.\nexport interface ItemRemoveEvent<Props extends ItemProps> {\n  // data: Props;\n  data: UnknownObject;\n}\n\n/**\n * Extract a valid enum value from a raw label positi9on value.\n * @param labelPosition Raw value.\n */\nconst parseLabelPosition = (\n  labelPosition: any // eslint-disable-line @typescript-eslint/no-explicit-any\n): ItemProps[\"labelPosition\"] => {\n  switch (labelPosition) {\n    case \"up\":\n    case \"right\":\n    case \"down\":\n    case \"left\":\n      return labelPosition;\n    default:\n      return \"down\";\n  }\n};\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the item props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function itemBasePropsDecoder(data: UnknownObject): ItemProps | never {\n  if (data.id == null || isNaN(parseInt(data.id))) {\n    throw new TypeError(\"invalid id.\");\n  }\n  if (data.type == null || isNaN(parseInt(data.type))) {\n    throw new TypeError(\"invalid type.\");\n  }\n\n  return {\n    id: parseInt(data.id),\n    type: parseInt(data.type),\n    label: notEmptyStringOr(data.label, null),\n    labelPosition: parseLabelPosition(data.labelPosition),\n    isLinkEnabled: parseBoolean(data.isLinkEnabled),\n    link: notEmptyStringOr(data.link, null),\n    isOnTop: parseBoolean(data.isOnTop),\n    parentId: parseIntOr(data.parentId, null),\n    aclGroupId: parseIntOr(data.aclGroupId, null),\n    ...sizePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...positionPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\n/**\n * Base class of the visual console items. Should be extended to use its capabilities.\n */\nabstract class VisualConsoleItem<Props extends ItemProps> {\n  // Properties of the item.\n  private itemProps: Props;\n  // Reference to the DOM element which will contain the item.\n  public elementRef: HTMLElement;\n  public readonly labelElementRef: HTMLElement;\n  // Reference to the DOM element which will contain the view of the item which extends this class.\n  protected readonly childElementRef: HTMLElement;\n  // Event manager for click events.\n  private readonly clickEventManager = new TypedEvent<ItemClickEvent<Props>>();\n  // Event manager for remove events.\n  private readonly removeEventManager = new TypedEvent<\n    ItemRemoveEvent<Props>\n  >();\n  // List of references to clean the event listeners.\n  private readonly disposables: Disposable[] = [];\n\n  /**\n   * To create a new element which will be inside the item box.\n   * @return Item.\n   */\n  protected abstract createDomElement(): HTMLElement;\n\n  public constructor(props: Props) {\n    this.itemProps = props;\n\n    /*\n     * Get a HTMLElement which represents the container box\n     * of the Visual Console item. This element will manage\n     * all the common things like click events, show a border\n     * when hovered, etc.\n     */\n    this.elementRef = this.createContainerDomElement();\n    this.labelElementRef = this.createLabelDomElement();\n\n    /*\n     * Get a HTMLElement which represents the custom view\n     * of the Visual Console item. This element will be\n     * different depending on the item implementation.\n     */\n    this.childElementRef = this.createDomElement();\n\n    // Insert the elements into the container.\n    this.elementRef.append(this.childElementRef, this.labelElementRef);\n\n    // Resize element.\n    this.resizeElement(props.width, props.height);\n    // Set label position.\n    this.changeLabelPosition(props.labelPosition);\n  }\n\n  /**\n   * To create a new box for the visual console item.\n   * @return Item box.\n   */\n  private createContainerDomElement(): HTMLElement {\n    let box;\n    if (this.props.isLinkEnabled) {\n      box = document.createElement(\"a\");\n      box as HTMLAnchorElement;\n      if (this.props.link) box.href = this.props.link;\n    } else {\n      box = document.createElement(\"div\");\n      box as HTMLDivElement;\n    }\n\n    box.className = \"visual-console-item\";\n    box.style.zIndex = this.props.isOnTop ? \"2\" : \"1\";\n    box.style.left = `${this.props.x}px`;\n    box.style.top = `${this.props.y}px`;\n    box.onclick = e =>\n      this.clickEventManager.emit({ data: this.props, nativeEvent: e });\n\n    return box;\n  }\n\n  /**\n   * To create a new label for the visual console item.\n   * @return Item label.\n   */\n  protected createLabelDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.className = \"visual-console-item-label\";\n    // Add the label if it exists.\n    if (this.props.label && this.props.label.length) {\n      element.innerHTML = this.props.label;\n    }\n\n    return element;\n  }\n\n  /**\n   * Public accessor of the `props` property.\n   * @return Properties.\n   */\n  public get props(): Props {\n    return { ...this.itemProps }; // Return a copy.\n  }\n\n  /**\n   * Public setter of the `props` property.\n   * If the new props are different enough than the\n   * stored props, a render would be fired.\n   * @param newProps\n   */\n  public set props(newProps: Props) {\n    const prevProps = this.props;\n    // Update the internal props.\n    this.itemProps = newProps;\n\n    // From this point, things which rely on this.props can access to the changes.\n\n    // Check if we should re-render.\n    if (this.shouldBeUpdated(prevProps, newProps)) this.render(prevProps);\n  }\n\n  /**\n   * To compare the previous and the new props and returns a boolean value\n   * in case the difference is meaningfull enough to perform DOM changes.\n   *\n   * Here, the only comparision is done by reference.\n   *\n   * Override this function to perform a different comparision depending on the item needs.\n   *\n   * @param prevProps\n   * @param newProps\n   * @return Whether the difference is meaningful enough to perform DOM changes or not.\n   */\n  protected shouldBeUpdated(prevProps: Props, newProps: Props): boolean {\n    return prevProps !== newProps;\n  }\n\n  /**\n   * To recreate or update the HTMLElement which represents the item into the DOM.\n   * @param prevProps If exists it will be used to only perform DOM updates instead of a full replace.\n   */\n  public render(prevProps: Props | null = null): void {\n    this.childElementRef.innerHTML = this.createDomElement().innerHTML;\n\n    // Move box.\n    if (!prevProps || this.positionChanged(prevProps, this.props)) {\n      this.moveElement(this.props.x, this.props.y);\n    }\n    // Resize box.\n    if (!prevProps || this.sizeChanged(prevProps, this.props)) {\n      this.resizeElement(this.props.width, this.props.height);\n    }\n    // Change label.\n    if (!prevProps || prevProps.label !== this.props.label) {\n      this.labelElementRef.innerHTML = this.createLabelDomElement().innerHTML;\n    }\n    // Change link.\n    if (\n      prevProps &&\n      (prevProps.isLinkEnabled !== this.props.isLinkEnabled ||\n        (this.props.isLinkEnabled && prevProps.link !== this.props.link))\n    ) {\n      const container = this.createContainerDomElement();\n      container.innerHTML = this.elementRef.innerHTML;\n\n      if (this.elementRef.parentNode !== null) {\n        this.elementRef.parentNode.replaceChild(container, this.elementRef);\n      }\n\n      // Changed the reference to the main element. It's ugly, but needed.\n      this.elementRef = container;\n    }\n    // Change label position.\n    if (!prevProps || prevProps.labelPosition !== this.props.labelPosition) {\n      this.changeLabelPosition(this.props.labelPosition);\n    }\n  }\n\n  /**\n   * To remove the event listeners and the elements from the DOM.\n   */\n  public remove(): void {\n    // Call the remove event.\n    this.removeEventManager.emit({ data: this.props });\n    // Event listeners.\n    this.disposables.forEach(disposable => {\n      try {\n        disposable.dispose();\n      } catch (ignored) {} // eslint-disable-line no-empty\n    });\n    // VisualConsoleItem DOM element.\n    this.elementRef.remove();\n  }\n\n  /**\n   * Compare the previous and the new position and return\n   * a boolean value in case the position changed.\n   * @param prevPosition\n   * @param newPosition\n   * @return Whether the position changed or not.\n   */\n  protected positionChanged(\n    prevPosition: Position,\n    newPosition: Position\n  ): boolean {\n    return prevPosition.x !== newPosition.x || prevPosition.y !== newPosition.y;\n  }\n\n  /**\n   * Move the label around the item content.\n   * @param position Label position.\n   */\n  protected changeLabelPosition(position: Props[\"labelPosition\"]): void {\n    switch (position) {\n      case \"up\":\n        this.elementRef.style.flexDirection = \"column-reverse\";\n        break;\n      case \"left\":\n        this.elementRef.style.flexDirection = \"row-reverse\";\n        break;\n      case \"right\":\n        this.elementRef.style.flexDirection = \"row\";\n        break;\n      case \"down\":\n      default:\n        this.elementRef.style.flexDirection = \"column\";\n        break;\n    }\n  }\n\n  /**\n   * Move the DOM container.\n   * @param x Horizontal axis position.\n   * @param y Vertical axis position.\n   */\n  protected moveElement(x: number, y: number): void {\n    this.elementRef.style.left = `${x}px`;\n    this.elementRef.style.top = `${y}px`;\n  }\n\n  /**\n   * Update the position into the properties and move the DOM container.\n   * @param x Horizontal axis position.\n   * @param y Vertical axis position.\n   */\n  public move(x: number, y: number): void {\n    this.moveElement(x, y);\n    this.itemProps = {\n      ...this.props, // Object spread: http://es6-features.org/#SpreadOperator\n      x,\n      y\n    };\n  }\n\n  /**\n   * Compare the previous and the new size and return\n   * a boolean value in case the size changed.\n   * @param prevSize\n   * @param newSize\n   * @return Whether the size changed or not.\n   */\n  protected sizeChanged(prevSize: Size, newSize: Size): boolean {\n    return (\n      prevSize.width !== newSize.width || prevSize.height !== newSize.height\n    );\n  }\n\n  /**\n   * Resize the DOM content container.\n   * @param width\n   * @param height\n   */\n  protected resizeElement(width: number, height: number): void {\n    // The most valuable size is the content size.\n    this.childElementRef.style.width = width > 0 ? `${width}px` : null;\n    this.childElementRef.style.height = height > 0 ? `${height}px` : null;\n  }\n\n  /**\n   * Update the size into the properties and resize the DOM container.\n   * @param width\n   * @param height\n   */\n  public resize(width: number, height: number): void {\n    this.resizeElement(width, height);\n    this.itemProps = {\n      ...this.props, // Object spread: http://es6-features.org/#SpreadOperator\n      width,\n      height\n    };\n  }\n\n  /**\n   * To add an event handler to the click of the linked visual console elements.\n   * @param listener Function which is going to be executed when a linked console is clicked.\n   */\n  public onClick(listener: Listener<ItemClickEvent<Props>>): Disposable {\n    /*\n     * The '.on' function returns a function which will clean the event\n     * listener when executed. We store all the 'dispose' functions to\n     * call them when the item should be cleared.\n     */\n    const disposable = this.clickEventManager.on(listener);\n    this.disposables.push(disposable);\n\n    return disposable;\n  }\n\n  /**\n   * To add an event handler to the removal of the item.\n   * @param listener Function which is going to be executed when a item is removed.\n   */\n  public onRemove(listener: Listener<ItemRemoveEvent<Props>>): Disposable {\n    /*\n     * The '.on' function returns a function which will clean the event\n     * listener when executed. We store all the 'dispose' functions to\n     * call them when the item should be cleared.\n     */\n    const disposable = this.removeEventManager.on(listener);\n    this.disposables.push(disposable);\n\n    return disposable;\n  }\n}\n\nexport default VisualConsoleItem;\n","import {\n  WithModuleProps,\n  LinkedVisualConsoleProps,\n  UnknownObject\n} from \"../types\";\n\nimport {\n  modulePropsDecoder,\n  linkedVCPropsDecoder,\n  notEmptyStringOr\n} from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type StaticGraphProps = {\n  type: ItemType.STATIC_GRAPH;\n  imageSrc: string; // URL?\n  showLastValueTooltip: \"default\" | \"enabled\" | \"disabled\";\n  statusImageSrc: string | null; // URL?\n  lastValue: string | null;\n} & ItemProps &\n  (WithModuleProps | LinkedVisualConsoleProps);\n\n/**\n * Extract a valid enum value from a raw unknown value.\n * @param showLastValueTooltip Raw value.\n */\nconst parseShowLastValueTooltip = (\n  showLastValueTooltip: any // eslint-disable-line @typescript-eslint/no-explicit-any\n): StaticGraphProps[\"showLastValueTooltip\"] => {\n  switch (showLastValueTooltip) {\n    case \"default\":\n    case \"enabled\":\n    case \"disabled\":\n      return showLastValueTooltip;\n    default:\n      return \"default\";\n  }\n};\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the static graph props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function staticGraphPropsDecoder(\n  data: UnknownObject\n): StaticGraphProps | never {\n  if (typeof data.imageSrc !== \"string\" || data.imageSrc.length === 0) {\n    throw new TypeError(\"invalid image src.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.STATIC_GRAPH,\n    imageSrc: data.imageSrc,\n    showLastValueTooltip: parseShowLastValueTooltip(data.showLastValueTooltip),\n    statusImageSrc: notEmptyStringOr(data.statusImageSrc, null),\n    lastValue: notEmptyStringOr(data.lastValue, null),\n    ...modulePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class StaticGraph extends Item<StaticGraphProps> {\n  protected createDomElement(): HTMLElement {\n    const img: HTMLImageElement = document.createElement(\"img\");\n    img.className = \"static-graph\";\n    img.src = this.props.statusImageSrc || this.props.imageSrc;\n\n    // Show last value in a tooltip.\n    if (\n      this.props.lastValue !== null &&\n      this.props.showLastValueTooltip !== \"disabled\"\n    ) {\n      img.className = \"static-graph image forced_title\";\n      img.setAttribute(\"data-use_title_for_force_title\", \"1\");\n      img.setAttribute(\"data-title\", this.props.lastValue);\n      img.alt = this.props.lastValue;\n    }\n\n    return img;\n  }\n}\n","import { LinkedVisualConsoleProps, UnknownObject } from \"../types\";\nimport { linkedVCPropsDecoder } from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type IconProps = {\n  type: ItemType.ICON;\n  imageSrc: string; // URL?\n} & ItemProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the icon props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function iconPropsDecoder(data: UnknownObject): IconProps | never {\n  if (typeof data.imageSrc !== \"string\" || data.imageSrc.length === 0) {\n    throw new TypeError(\"invalid image src.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.ICON,\n    imageSrc: data.imageSrc,\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class Icon extends Item<IconProps> {\n  protected createDomElement(): HTMLElement {\n    const img: HTMLImageElement = document.createElement(\"img\");\n    img.className = \"icon\";\n    img.src = this.props.imageSrc;\n\n    return img;\n  }\n}\n","import {\n  WithModuleProps,\n  LinkedVisualConsoleProps,\n  UnknownObject\n} from \"../types\";\nimport { modulePropsDecoder, linkedVCPropsDecoder } from \"../lib\";\nimport Item, { itemBasePropsDecoder, ItemType, ItemProps } from \"../Item\";\n\nexport type ColorCloudProps = {\n  type: ItemType.COLOR_CLOUD;\n  color: string;\n  // TODO: Add the rest of the color cloud values?\n} & ItemProps &\n  WithModuleProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the static graph props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function colorCloudPropsDecoder(\n  data: UnknownObject\n): ColorCloudProps | never {\n  // TODO: Validate the color.\n  if (typeof data.color !== \"string\" || data.color.length === 0) {\n    throw new TypeError(\"invalid color.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.COLOR_CLOUD,\n    color: data.color,\n    ...modulePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\n\nexport default class ColorCloud extends Item<ColorCloudProps> {\n  protected createDomElement(): HTMLElement {\n    const container: HTMLDivElement = document.createElement(\"div\");\n    container.className = \"color-cloud\";\n\n    // Add the SVG.\n    container.append(this.createSvgElement());\n\n    return container;\n  }\n\n  public createSvgElement(): SVGSVGElement {\n    const gradientId = `grad_${this.props.id}`;\n    // SVG container.\n    const svg = document.createElementNS(svgNS, \"svg\");\n    // Auto resize SVG using the view box magic: https://css-tricks.com/scale-svg/\n    svg.setAttribute(\"viewBox\", \"0 0 100 100\");\n\n    // Defs.\n    const defs = document.createElementNS(svgNS, \"defs\");\n    // Radial gradient.\n    const radialGradient = document.createElementNS(svgNS, \"radialGradient\");\n    radialGradient.setAttribute(\"id\", gradientId);\n    radialGradient.setAttribute(\"cx\", \"50%\");\n    radialGradient.setAttribute(\"cy\", \"50%\");\n    radialGradient.setAttribute(\"r\", \"50%\");\n    radialGradient.setAttribute(\"fx\", \"50%\");\n    radialGradient.setAttribute(\"fy\", \"50%\");\n    // Stops.\n    const stop0 = document.createElementNS(svgNS, \"stop\");\n    stop0.setAttribute(\"offset\", \"0%\");\n    stop0.setAttribute(\n      \"style\",\n      `stop-color:${this.props.color};stop-opacity:0.9`\n    );\n    const stop100 = document.createElementNS(svgNS, \"stop\");\n    stop100.setAttribute(\"offset\", \"100%\");\n    stop100.setAttribute(\n      \"style\",\n      `stop-color:${this.props.color};stop-opacity:0`\n    );\n    // Circle.\n    const circle = document.createElementNS(svgNS, \"circle\");\n    circle.setAttribute(\"fill\", `url(#${gradientId})`);\n    circle.setAttribute(\"cx\", \"50%\");\n    circle.setAttribute(\"cy\", \"50%\");\n    circle.setAttribute(\"r\", \"50%\");\n\n    // Append elements.\n    radialGradient.append(stop0, stop100);\n    defs.append(radialGradient);\n    svg.append(defs, circle);\n\n    return svg;\n  }\n}\n","import { LinkedVisualConsoleProps, UnknownObject } from \"../types\";\nimport { linkedVCPropsDecoder, parseIntOr, notEmptyStringOr } from \"../lib\";\nimport Item, { ItemProps, itemBasePropsDecoder, ItemType } from \"../Item\";\n\nexport type GroupProps = {\n  type: ItemType.GROUP_ITEM;\n  imageSrc: string; // URL?\n  groupId: number;\n  statusImageSrc: string | null;\n} & ItemProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the group props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function groupPropsDecoder(data: UnknownObject): GroupProps | never {\n  if (typeof data.imageSrc !== \"string\" || data.imageSrc.length === 0) {\n    throw new TypeError(\"invalid image src.\");\n  }\n  if (parseIntOr(data.groupId, null) === null) {\n    throw new TypeError(\"invalid group Id.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.GROUP_ITEM,\n    imageSrc: data.imageSrc,\n    groupId: parseInt(data.groupId),\n    statusImageSrc: notEmptyStringOr(data.statusImageSrc, null),\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class Group extends Item<GroupProps> {\n  protected createDomElement(): HTMLElement {\n    const img: HTMLImageElement = document.createElement(\"img\");\n    img.className = \"group\";\n    if (this.props.statusImageSrc != null) {\n      img.src = this.props.statusImageSrc;\n    }\n\n    return img;\n  }\n}\n","import \"./styles.css\";\n\nimport { LinkedVisualConsoleProps, UnknownObject, Size } from \"../../types\";\nimport {\n  linkedVCPropsDecoder,\n  parseIntOr,\n  padLeft,\n  parseBoolean,\n  prefixedCssRules,\n  notEmptyStringOr\n} from \"../../lib\";\nimport Item, { ItemProps, itemBasePropsDecoder, ItemType } from \"../../Item\";\n\nexport type ClockProps = {\n  type: ItemType.CLOCK;\n  clockType: \"analogic\" | \"digital\";\n  clockFormat: \"datetime\" | \"time\";\n  clockTimezone: string;\n  clockTimezoneOffset: number; // Offset of the timezone to UTC in seconds.\n  showClockTimezone: boolean;\n  color?: string | null;\n} & ItemProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Extract a valid enum value from a raw unknown value.\n * @param clockType Raw value.\n */\nconst parseClockType = (\n  clockType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n): ClockProps[\"clockType\"] => {\n  switch (clockType) {\n    case \"analogic\":\n    case \"digital\":\n      return clockType;\n    default:\n      return \"analogic\";\n  }\n};\n\n/**\n * Extract a valid enum value from a raw unknown value.\n * @param clockFormat Raw value.\n */\nconst parseClockFormat = (\n  clockFormat: any // eslint-disable-line @typescript-eslint/no-explicit-any\n): ClockProps[\"clockFormat\"] => {\n  switch (clockFormat) {\n    case \"datetime\":\n    case \"date\":\n    case \"time\":\n      return clockFormat;\n    default:\n      return \"datetime\";\n  }\n};\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the clock props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function clockPropsDecoder(data: UnknownObject): ClockProps | never {\n  if (\n    typeof data.clockTimezone !== \"string\" ||\n    data.clockTimezone.length === 0\n  ) {\n    throw new TypeError(\"invalid timezone.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.CLOCK,\n    clockType: parseClockType(data.clockType),\n    clockFormat: parseClockFormat(data.clockFormat),\n    clockTimezone: data.clockTimezone,\n    clockTimezoneOffset: parseIntOr(data.clockTimezoneOffset, 0),\n    showClockTimezone: parseBoolean(data.showClockTimezone),\n    color: notEmptyStringOr(data.color, null),\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class Clock extends Item<ClockProps> {\n  public static readonly TICK_INTERVAL = 1000; // In ms.\n  private intervalRef: number | null = null;\n\n  public constructor(props: ClockProps) {\n    // Call the superclass constructor.\n    super(props);\n\n    /* The item is already loaded and inserted into the DOM.\n     * The class properties are now initialized.\n     * Now you can modify the item, add event handlers, timers, etc.\n     */\n\n    /* The use of the arrow function is important here. startTick will\n     * use the function passed as an argument to call the global setInterval\n     * function. The interval, timeout or event functions, among other, are\n     * called into another execution loop and using a different context.\n     * The arrow functions, unlike the classic functions, doesn't create\n     * their own context (this), so their context at execution time will be\n     * use the current context at the declaration time.\n     * http://es6-features.org/#Lexicalthis\n     */\n    this.startTick(\n      () => {\n        // Replace the old element with the updated date.\n        this.childElementRef.innerHTML = this.createClock().innerHTML;\n      },\n      /* The analogic clock doesn't need to tick,\n       * but it will be refreshed every 20 seconds\n       * to avoid a desync caused by page freezes.\n       */\n      this.props.clockType === \"analogic\" ? 20000 : Clock.TICK_INTERVAL\n    );\n  }\n\n  /**\n   * Wrap a window.clearInterval call.\n   */\n  private stopTick(): void {\n    if (this.intervalRef !== null) {\n      window.clearInterval(this.intervalRef);\n      this.intervalRef = null;\n    }\n  }\n\n  /**\n   * Wrap a window.setInterval call.\n   * @param handler Function to be called every time the interval\n   * timer is reached.\n   * @param interval Number in milliseconds for the interval timer.\n   */\n  private startTick(\n    handler: TimerHandler,\n    interval: number = Clock.TICK_INTERVAL\n  ): void {\n    this.stopTick();\n    this.intervalRef = window.setInterval(handler, interval);\n  }\n\n  /**\n   * Create a element which contains the DOM representation of the item.\n   * @return DOM Element.\n   * @override\n   */\n  protected createDomElement(): HTMLElement | never {\n    return this.createClock();\n  }\n\n  /**\n   * To remove the event listeners and the elements from the DOM.\n   * @override\n   */\n  public remove(): void {\n    // Clear the interval.\n    this.stopTick();\n    // Call to the parent clean function.\n    super.remove();\n  }\n\n  /**\n   * @override Item.resizeElement\n   * Resize the DOM content container.\n   * @param width\n   * @param height\n   */\n  protected resizeElement(width: number, height: number): void {\n    const { width: newWidth, height: newHeight } = this.getElementSize(\n      width,\n      height\n    ); // Destructuring assigment: http://es6-features.org/#ObjectMatchingShorthandNotation\n    super.resizeElement(newWidth, newHeight);\n    // Re-render the item to force it calculate a new font size.\n    if (this.props.clockType === \"digital\") {\n      // Replace the old element with the updated date.\n      this.childElementRef.innerHTML = this.createClock().innerHTML;\n    }\n  }\n\n  /**\n   * Create a element which contains a representation of a clock.\n   * It choose between the clock types.\n   * @return DOM Element.\n   * @throws Error.\n   */\n  private createClock(): HTMLElement | never {\n    switch (this.props.clockType) {\n      case \"analogic\":\n        return this.createAnalogicClock();\n      case \"digital\":\n        return this.createDigitalClock();\n      default:\n        throw new Error(\"invalid clock type.\");\n    }\n  }\n\n  /**\n   * Create a element which contains a representation of an analogic clock.\n   * @return DOM Element.\n   */\n  private createAnalogicClock(): HTMLElement {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const colors = {\n      watchFace: \"#FFFFF0\",\n      watchFaceBorder: \"#242124\",\n      mark: \"#242124\",\n      handDark: \"#242124\",\n      handLight: \"#525252\",\n      secondHand: \"#DC143C\"\n    };\n\n    const { width, height } = this.getElementSize(); // Destructuring assigment: http://es6-features.org/#ObjectMatchingShorthandNotation\n\n    const div = document.createElement(\"div\");\n    div.className = \"analogic-clock\";\n    div.style.width = `${width}px`;\n    div.style.height = `${height}px`;\n\n    // SVG container.\n    const svg = document.createElementNS(svgNS, \"svg\");\n    // Auto resize SVG using the view box magic: https://css-tricks.com/scale-svg/\n    svg.setAttribute(\"viewBox\", \"0 0 100 100\");\n\n    // Clock face.\n    const clockFace = document.createElementNS(svgNS, \"g\");\n    clockFace.setAttribute(\"class\", \"clockface\");\n    const clockFaceBackground = document.createElementNS(svgNS, \"circle\");\n    clockFaceBackground.setAttribute(\"cx\", \"50\");\n    clockFaceBackground.setAttribute(\"cy\", \"50\");\n    clockFaceBackground.setAttribute(\"r\", \"48\");\n    clockFaceBackground.setAttribute(\"fill\", colors.watchFace);\n    clockFaceBackground.setAttribute(\"stroke\", colors.watchFaceBorder);\n    clockFaceBackground.setAttribute(\"stroke-width\", \"2\");\n    clockFaceBackground.setAttribute(\"stroke-linecap\", \"round\");\n    // Insert the clockface background into the clockface group.\n    clockFace.append(clockFaceBackground);\n\n    // Timezone complication.\n    if (this.props.showClockTimezone) {\n      const timezoneComplication = document.createElementNS(svgNS, \"text\");\n      timezoneComplication.setAttribute(\"text-anchor\", \"middle\");\n      timezoneComplication.setAttribute(\"font-size\", \"8\");\n      timezoneComplication.setAttribute(\n        \"transform\",\n        \"translate(30 50) rotate(90)\" // Rotate to counter the clock rotation.\n      );\n      timezoneComplication.setAttribute(\"fill\", colors.mark);\n      timezoneComplication.textContent = this.props.clockTimezone;\n      clockFace.append(timezoneComplication);\n    }\n\n    // Marks group.\n    const marksGroup = document.createElementNS(svgNS, \"g\");\n    marksGroup.setAttribute(\"class\", \"marks\");\n    // Build the 12 hours mark.\n    const mainMarkGroup = document.createElementNS(svgNS, \"g\");\n    mainMarkGroup.setAttribute(\"class\", \"mark\");\n    mainMarkGroup.setAttribute(\"transform\", \"translate(50 50)\");\n    const mark1a = document.createElementNS(svgNS, \"line\");\n    mark1a.setAttribute(\"x1\", \"36\");\n    mark1a.setAttribute(\"y1\", \"0\");\n    mark1a.setAttribute(\"x2\", \"46\");\n    mark1a.setAttribute(\"y2\", \"0\");\n    mark1a.setAttribute(\"stroke\", colors.mark);\n    mark1a.setAttribute(\"stroke-width\", \"5\");\n    const mark1b = document.createElementNS(svgNS, \"line\");\n    mark1b.setAttribute(\"x1\", \"36\");\n    mark1b.setAttribute(\"y1\", \"0\");\n    mark1b.setAttribute(\"x2\", \"46\");\n    mark1b.setAttribute(\"y2\", \"0\");\n    mark1b.setAttribute(\"stroke\", colors.watchFace);\n    mark1b.setAttribute(\"stroke-width\", \"1\");\n    // Insert the 12 mark lines into their group.\n    mainMarkGroup.append(mark1a, mark1b);\n    // Insert the main mark into the marks group.\n    marksGroup.append(mainMarkGroup);\n    // Build the rest of the marks.\n    for (let i = 1; i < 60; i++) {\n      const mark = document.createElementNS(svgNS, \"line\");\n      mark.setAttribute(\"y1\", \"0\");\n      mark.setAttribute(\"y2\", \"0\");\n      mark.setAttribute(\"stroke\", colors.mark);\n      mark.setAttribute(\"transform\", `translate(50 50) rotate(${i * 6})`);\n\n      if (i % 5 === 0) {\n        mark.setAttribute(\"x1\", \"38\");\n        mark.setAttribute(\"x2\", \"46\");\n        mark.setAttribute(\"stroke-width\", i % 15 === 0 ? \"2\" : \"1\");\n      } else {\n        mark.setAttribute(\"x1\", \"42\");\n        mark.setAttribute(\"x2\", \"46\");\n        mark.setAttribute(\"stroke-width\", \"0.5\");\n      }\n\n      // Insert the mark into the marks group.\n      marksGroup.append(mark);\n    }\n\n    /* Clock hands */\n\n    // Hour hand.\n    const hourHand = document.createElementNS(svgNS, \"g\");\n    hourHand.setAttribute(\"class\", \"hour-hand\");\n    hourHand.setAttribute(\"transform\", \"translate(50 50)\");\n    // This will go back and will act like a border.\n    const hourHandA = document.createElementNS(svgNS, \"line\");\n    hourHandA.setAttribute(\"class\", \"hour-hand-a\");\n    hourHandA.setAttribute(\"x1\", \"0\");\n    hourHandA.setAttribute(\"y1\", \"0\");\n    hourHandA.setAttribute(\"x2\", \"30\");\n    hourHandA.setAttribute(\"y2\", \"0\");\n    hourHandA.setAttribute(\"stroke\", colors.handLight);\n    hourHandA.setAttribute(\"stroke-width\", \"4\");\n    hourHandA.setAttribute(\"stroke-linecap\", \"round\");\n    // This will go in front of the previous line.\n    const hourHandB = document.createElementNS(svgNS, \"line\");\n    hourHandB.setAttribute(\"class\", \"hour-hand-b\");\n    hourHandB.setAttribute(\"x1\", \"0\");\n    hourHandB.setAttribute(\"y1\", \"0\");\n    hourHandB.setAttribute(\"x2\", \"29.9\");\n    hourHandB.setAttribute(\"y2\", \"0\");\n    hourHandB.setAttribute(\"stroke\", colors.handDark);\n    hourHandB.setAttribute(\"stroke-width\", \"3.1\");\n    hourHandB.setAttribute(\"stroke-linecap\", \"round\");\n    // Append the elements to finish the hour hand.\n    hourHand.append(hourHandA, hourHandB);\n\n    // Minute hand.\n    const minuteHand = document.createElementNS(svgNS, \"g\");\n    minuteHand.setAttribute(\"class\", \"minute-hand\");\n    minuteHand.setAttribute(\"transform\", \"translate(50 50)\");\n    // This will go back and will act like a border.\n    const minuteHandA = document.createElementNS(svgNS, \"line\");\n    minuteHandA.setAttribute(\"class\", \"minute-hand-a\");\n    minuteHandA.setAttribute(\"x1\", \"0\");\n    minuteHandA.setAttribute(\"y1\", \"0\");\n    minuteHandA.setAttribute(\"x2\", \"40\");\n    minuteHandA.setAttribute(\"y2\", \"0\");\n    minuteHandA.setAttribute(\"stroke\", colors.handLight);\n    minuteHandA.setAttribute(\"stroke-width\", \"2\");\n    minuteHandA.setAttribute(\"stroke-linecap\", \"round\");\n    // This will go in front of the previous line.\n    const minuteHandB = document.createElementNS(svgNS, \"line\");\n    minuteHandB.setAttribute(\"class\", \"minute-hand-b\");\n    minuteHandB.setAttribute(\"x1\", \"0\");\n    minuteHandB.setAttribute(\"y1\", \"0\");\n    minuteHandB.setAttribute(\"x2\", \"39.9\");\n    minuteHandB.setAttribute(\"y2\", \"0\");\n    minuteHandB.setAttribute(\"stroke\", colors.handDark);\n    minuteHandB.setAttribute(\"stroke-width\", \"1.5\");\n    minuteHandB.setAttribute(\"stroke-linecap\", \"round\");\n    const minuteHandPin = document.createElementNS(svgNS, \"circle\");\n    minuteHandPin.setAttribute(\"r\", \"3\");\n    minuteHandPin.setAttribute(\"fill\", colors.handDark);\n    // Append the elements to finish the minute hand.\n    minuteHand.append(minuteHandA, minuteHandB, minuteHandPin);\n\n    // Second hand.\n    const secondHand = document.createElementNS(svgNS, \"g\");\n    secondHand.setAttribute(\"class\", \"second-hand\");\n    secondHand.setAttribute(\"transform\", \"translate(50 50)\");\n    const secondHandBar = document.createElementNS(svgNS, \"line\");\n    secondHandBar.setAttribute(\"x1\", \"0\");\n    secondHandBar.setAttribute(\"y1\", \"0\");\n    secondHandBar.setAttribute(\"x2\", \"46\");\n    secondHandBar.setAttribute(\"y2\", \"0\");\n    secondHandBar.setAttribute(\"stroke\", colors.secondHand);\n    secondHandBar.setAttribute(\"stroke-width\", \"1\");\n    secondHandBar.setAttribute(\"stroke-linecap\", \"round\");\n    const secondHandPin = document.createElementNS(svgNS, \"circle\");\n    secondHandPin.setAttribute(\"r\", \"2\");\n    secondHandPin.setAttribute(\"fill\", colors.secondHand);\n    // Append the elements to finish the second hand.\n    secondHand.append(secondHandBar, secondHandPin);\n\n    // Pin.\n    const pin = document.createElementNS(svgNS, \"circle\");\n    pin.setAttribute(\"cx\", \"50\");\n    pin.setAttribute(\"cy\", \"50\");\n    pin.setAttribute(\"r\", \"0.3\");\n    pin.setAttribute(\"fill\", colors.handDark);\n\n    // Get the hand angles.\n    const date = this.getDate();\n    const seconds = date.getSeconds();\n    const minutes = date.getMinutes();\n    const hours = date.getHours();\n    const secAngle = (360 / 60) * seconds;\n    const minuteAngle = (360 / 60) * minutes + (360 / 60) * (seconds / 60);\n    const hourAngle = (360 / 12) * hours + (360 / 12) * (minutes / 60);\n    // Set the clock time by moving the hands.\n    hourHand.setAttribute(\"transform\", `translate(50 50) rotate(${hourAngle})`);\n    minuteHand.setAttribute(\n      \"transform\",\n      `translate(50 50) rotate(${minuteAngle})`\n    );\n    secondHand.setAttribute(\n      \"transform\",\n      `translate(50 50) rotate(${secAngle})`\n    );\n\n    // Build the clock\n    svg.append(clockFace, marksGroup, hourHand, minuteHand, secondHand, pin);\n    // Rotate the clock to its normal position.\n    svg.setAttribute(\"transform\", \"rotate(-90)\");\n\n    /* Add the animation declaration to the container.\n     * Since the animation keyframes need to know the\n     * start angle, this angle is dynamic (current time),\n     * and we can't edit keyframes through javascript\n     * safely and with backwards compatibility, we need\n     * to inject it.\n     */\n    div.innerHTML = `\n      <style>\n        @keyframes rotate-hour {\n          from {\n            ${prefixedCssRules(\n              \"transform\",\n              `translate(50px, 50px) rotate(${hourAngle}deg)`\n            ).join(\"\\n\")}\n          }\n          to {\n            ${prefixedCssRules(\n              \"transform\",\n              `translate(50px, 50px) rotate(${hourAngle + 360}deg)`\n            ).join(\"\\n\")}\n          }\n        }\n        @keyframes rotate-minute {\n          from {\n            ${prefixedCssRules(\n              \"transform\",\n              `translate(50px, 50px) rotate(${minuteAngle}deg)`\n            ).join(\"\\n\")}\n          }\n          to {\n            ${prefixedCssRules(\n              \"transform\",\n              `translate(50px, 50px) rotate(${minuteAngle + 360}deg)`\n            ).join(\"\\n\")}\n          }\n        }\n        @keyframes rotate-second {\n          from {\n            ${prefixedCssRules(\n              \"transform\",\n              `translate(50px, 50px) rotate(${secAngle}deg)`\n            ).join(\"\\n\")}\n          }\n          to {\n            ${prefixedCssRules(\n              \"transform\",\n              `translate(50px, 50px) rotate(${secAngle + 360}deg)`\n            ).join(\"\\n\")}\n          }\n        }\n      </style>\n    `;\n    // Add the clock to the container\n    div.append(svg);\n\n    return div;\n  }\n\n  /**\n   * Create a element which contains a representation of a digital clock.\n   * @return DOM Element.\n   */\n  private createDigitalClock(): HTMLElement {\n    const element: HTMLDivElement = document.createElement(\"div\");\n    element.className = \"digital-clock\";\n\n    const { width } = this.getElementSize(); // Destructuring assigment: http://es6-features.org/#ObjectMatchingShorthandNotation\n\n    // Calculate font size to adapt the font to the item size.\n    const baseTimeFontSize = 20; // Per 100px of width.\n    const dateFontSizeMultiplier = 0.5;\n    const tzFontSizeMultiplier = 6 / this.props.clockTimezone.length;\n    const timeFontSize = (baseTimeFontSize * width) / 100;\n    const dateFontSize =\n      (baseTimeFontSize * dateFontSizeMultiplier * width) / 100;\n    const tzFontSize = Math.min(\n      (baseTimeFontSize * tzFontSizeMultiplier * width) / 100,\n      (width / 100) * 10\n    );\n\n    // Date.\n    if (this.props.clockFormat === \"datetime\") {\n      const dateElem: HTMLSpanElement = document.createElement(\"span\");\n      dateElem.className = \"date\";\n      dateElem.textContent = this.getDigitalDate();\n      dateElem.style.fontSize = `${dateFontSize}px`;\n      if (this.props.color) dateElem.style.color = this.props.color;\n      element.append(dateElem);\n    }\n\n    // Time.\n    const timeElem: HTMLSpanElement = document.createElement(\"span\");\n    timeElem.className = \"time\";\n    timeElem.textContent = this.getDigitalTime();\n    timeElem.style.fontSize = `${timeFontSize}px`;\n    if (this.props.color) timeElem.style.color = this.props.color;\n    element.append(timeElem);\n\n    // Timezone name.\n    if (this.props.showClockTimezone) {\n      const tzElem: HTMLSpanElement = document.createElement(\"span\");\n      tzElem.className = \"timezone\";\n      tzElem.textContent = this.props.clockTimezone;\n      tzElem.style.fontSize = `${tzFontSize}px`;\n      if (this.props.color) tzElem.style.color = this.props.color;\n      element.append(tzElem);\n    }\n\n    return element;\n  }\n\n  /**\n   * Generate the current date using the timezone offset stored into the properties.\n   * @return The current date.\n   */\n  private getDate(): Date {\n    const d = new Date();\n    const targetTZOffset = this.props.clockTimezoneOffset * 60 * 1000; // In ms.\n    const localTZOffset = d.getTimezoneOffset() * 60 * 1000; // In ms.\n    const utimestamp = d.getTime() + targetTZOffset + localTZOffset;\n\n    return new Date(utimestamp);\n  }\n\n  /**\n   * Generate a date representation with the format 'd/m/Y'.\n   * @example 24/02/2020.\n   * @return Date representation.\n   */\n  public getDigitalDate(initialDate: Date | null = null): string {\n    const date = initialDate || this.getDate();\n    // Use getDate, getDay returns the week day.\n    const day = padLeft(date.getDate(), 2, 0);\n    // The getMonth function returns the month starting by 0.\n    const month = padLeft(date.getMonth() + 1, 2, 0);\n    const year = padLeft(date.getFullYear(), 4, 0);\n\n    // Format: 'd/m/Y'.\n    return `${day}/${month}/${year}`;\n  }\n\n  /**\n   * Generate a time representation with the format 'hh:mm:ss'.\n   * @example 01:34:09.\n   * @return Time representation.\n   */\n  public getDigitalTime(initialDate: Date | null = null): string {\n    const date = initialDate || this.getDate();\n    const hours = padLeft(date.getHours(), 2, 0);\n    const minutes = padLeft(date.getMinutes(), 2, 0);\n    const seconds = padLeft(date.getSeconds(), 2, 0);\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  /**\n   * Generate a element size using the current size and the default values.\n   * @return The size.\n   */\n  private getElementSize(\n    width: number = this.props.width,\n    height: number = this.props.height\n  ): Size {\n    switch (this.props.clockType) {\n      case \"analogic\": {\n        let diameter = 100; // Default value.\n\n        if (width > 0 && height > 0) {\n          diameter = Math.min(width, height);\n        } else if (width > 0) {\n          diameter = width;\n        } else if (height > 0) {\n          diameter = height;\n        }\n\n        return {\n          width: diameter,\n          height: diameter\n        };\n      }\n      case \"digital\": {\n        if (width > 0 && height > 0) {\n          // The proportion of the clock should be (width = height / 2) aproximately.\n          height = width / 2 < height ? width / 2 : height;\n        } else if (width > 0) {\n          height = width / 2;\n        } else if (height > 0) {\n          // The proportion of the clock should be (height * 2 = width) aproximately.\n          width = height * 2;\n        } else {\n          width = 100; // Default value.\n          height = 50; // Default value.\n        }\n\n        return {\n          width,\n          height\n        };\n      }\n      default:\n        throw new Error(\"invalid clock type.\");\n    }\n  }\n}\n","import { UnknownObject } from \"../types\";\nimport { parseIntOr, notEmptyStringOr } from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\ninterface BoxProps extends ItemProps {\n  // Overrided properties.\n  readonly type: ItemType.BOX_ITEM;\n  label: null;\n  isLinkEnabled: false;\n  parentId: null;\n  aclGroupId: null;\n  // Custom properties.\n  borderWidth: number;\n  borderColor: string | null;\n  fillColor: string | null;\n}\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the item props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function boxPropsDecoder(data: UnknownObject): BoxProps | never {\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.BOX_ITEM,\n    label: null,\n    isLinkEnabled: false,\n    parentId: null,\n    aclGroupId: null,\n    // Custom properties.\n    borderWidth: parseIntOr(data.borderWidth, 0),\n    borderColor: notEmptyStringOr(data.borderColor, null),\n    fillColor: notEmptyStringOr(data.fillColor, null)\n  };\n}\n\nexport default class Box extends Item<BoxProps> {\n  protected createDomElement(): HTMLElement {\n    const box: HTMLDivElement = document.createElement(\"div\");\n    box.className = \"box\";\n    // To prevent this item to expand beyond its parent.\n    box.style.boxSizing = \"border-box\";\n\n    if (this.props.fillColor) {\n      box.style.backgroundColor = this.props.fillColor;\n    }\n\n    // Border.\n    if (this.props.borderWidth > 0) {\n      box.style.borderStyle = \"solid\";\n      // Control the max width to prevent this item to expand beyond its parent.\n      const maxBorderWidth = Math.min(this.props.width, this.props.height) / 2;\n      const borderWidth = Math.min(this.props.borderWidth, maxBorderWidth);\n      box.style.borderWidth = `${borderWidth}px`;\n\n      if (this.props.borderColor) {\n        box.style.borderColor = this.props.borderColor;\n      }\n    }\n\n    return box;\n  }\n}\n","import { UnknownObject, Position, Size } from \"../types\";\nimport { parseIntOr, notEmptyStringOr } from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\ninterface LineProps extends ItemProps {\n  // Overrided properties.\n  readonly type: ItemType.LINE_ITEM;\n  label: null;\n  isLinkEnabled: false;\n  parentId: null;\n  aclGroupId: null;\n  // Custom properties.\n  startPosition: Position;\n  endPosition: Position;\n  lineWidth: number;\n  color: string | null;\n}\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the item props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function linePropsDecoder(data: UnknownObject): LineProps | never {\n  const props: LineProps = {\n    ...itemBasePropsDecoder({ ...data, width: 1, height: 1 }), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.LINE_ITEM,\n    label: null,\n    isLinkEnabled: false,\n    parentId: null,\n    aclGroupId: null,\n    // Initialize Position & Size.\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    // Custom properties.\n    startPosition: {\n      x: parseIntOr(data.startX, 0),\n      y: parseIntOr(data.startY, 0)\n    },\n    endPosition: {\n      x: parseIntOr(data.endX, 0),\n      y: parseIntOr(data.endY, 0)\n    },\n    lineWidth: parseIntOr(data.lineWidth || data.borderWidth, 1),\n    color: notEmptyStringOr(data.borderColor || data.color, null)\n  };\n\n  /*\n   * We need to enhance the props with the extracted size and position\n   * of the box cause there are missing at the props update. A better\n   * solution would be overriding the props setter to do it there, but\n   * the language doesn't allow it while targetting ES5.\n   * TODO: We need to figure out a more consistent solution.\n   */\n\n  return {\n    ...props,\n    // Enhance the props extracting the box size and position.\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...Line.extractBoxSizeAndPosition(props)\n  };\n}\n\nexport default class Line extends Item<LineProps> {\n  /**\n   * @override\n   */\n  public constructor(props: LineProps) {\n    /*\n     * We need to override the constructor cause we need to obtain\n     * the\n     * box size and position from the start and finish points\n     * of the line.\n     */\n    super({\n      ...props,\n      ...Line.extractBoxSizeAndPosition(props)\n    });\n  }\n\n  /**\n   * @override\n   * To create the item's DOM representation.\n   * @return Item.\n   */\n  protected createDomElement(): HTMLElement {\n    const element: HTMLDivElement = document.createElement(\"div\");\n    element.className = \"line\";\n\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    // SVG container.\n    const svg = document.createElementNS(svgNS, \"svg\");\n    // Set SVG size.\n    svg.setAttribute(\n      \"width\",\n      (this.props.width + this.props.lineWidth).toString()\n    );\n    svg.setAttribute(\n      \"height\",\n      (this.props.height + this.props.lineWidth).toString()\n    );\n    const line = document.createElementNS(svgNS, \"line\");\n    line.setAttribute(\n      \"x1\",\n      `${this.props.startPosition.x - this.props.x + this.props.lineWidth / 2}`\n    );\n    line.setAttribute(\n      \"y1\",\n      `${this.props.startPosition.y - this.props.y + this.props.lineWidth / 2}`\n    );\n    line.setAttribute(\n      \"x2\",\n      `${this.props.endPosition.x - this.props.x + this.props.lineWidth / 2}`\n    );\n    line.setAttribute(\n      \"y2\",\n      `${this.props.endPosition.y - this.props.y + this.props.lineWidth / 2}`\n    );\n    line.setAttribute(\"stroke\", this.props.color || \"black\");\n    line.setAttribute(\"stroke-width\", this.props.lineWidth.toString());\n\n    svg.append(line);\n    element.append(svg);\n\n    return element;\n  }\n\n  /**\n   * Extract the size and position of the box from\n   * the start and the finish of the line.\n   * @param props Item properties.\n   */\n  public static extractBoxSizeAndPosition(props: LineProps): Size & Position {\n    return {\n      width: Math.abs(props.startPosition.x - props.endPosition.x),\n      height: Math.abs(props.startPosition.y - props.endPosition.y),\n      x: Math.min(props.startPosition.x, props.endPosition.x),\n      y: Math.min(props.startPosition.y, props.endPosition.y)\n    };\n  }\n}\n","import { LinkedVisualConsoleProps, UnknownObject } from \"../types\";\nimport { linkedVCPropsDecoder } from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type LabelProps = {\n  type: ItemType.LABEL;\n} & ItemProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the label props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function labelPropsDecoder(data: UnknownObject): LabelProps | never {\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.LABEL,\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class Label extends Item<LabelProps> {\n  protected createDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.className = \"label\";\n    element.innerHTML = this.props.label || \"\";\n\n    return element;\n  }\n\n  /**\n   * @override Item.createLabelDomElement\n   * Create a new label for the visual console item.\n   * @return Item label.\n   */\n  public createLabelDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.className = \"visual-console-item-label\";\n    // Always return an empty label.\n    return element;\n  }\n}\n","import {\n  LinkedVisualConsoleProps,\n  UnknownObject,\n  WithModuleProps\n} from \"../types\";\nimport { linkedVCPropsDecoder, parseIntOr, modulePropsDecoder } from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type SimpleValueProps = {\n  type: ItemType.SIMPLE_VALUE;\n  valueType: \"string\" | \"image\";\n  value: string;\n} & (\n  | {\n      processValue: \"none\";\n    }\n  | {\n      processValue: \"avg\" | \"max\" | \"min\";\n      period: number;\n    }) &\n  ItemProps &\n  WithModuleProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Extract a valid enum value from a raw value type.\n * @param valueType Raw value.\n */\nconst parseValueType = (\n  valueType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n): SimpleValueProps[\"valueType\"] => {\n  switch (valueType) {\n    case \"string\":\n    case \"image\":\n      return valueType;\n    default:\n      return \"string\";\n  }\n};\n\n/**\n * Extract a valid enum value from a raw process value.\n * @param processValue Raw value.\n */\nconst parseProcessValue = (\n  processValue: any // eslint-disable-line @typescript-eslint/no-explicit-any\n): SimpleValueProps[\"processValue\"] => {\n  switch (processValue) {\n    case \"none\":\n    case \"avg\":\n    case \"max\":\n    case \"min\":\n      return processValue;\n    default:\n      return \"none\";\n  }\n};\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the simple value props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function simpleValuePropsDecoder(\n  data: UnknownObject\n): SimpleValueProps | never {\n  if (typeof data.value !== \"string\" || data.value.length === 0) {\n    throw new TypeError(\"invalid value\");\n  }\n\n  const processValue = parseProcessValue(data.processValue);\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.SIMPLE_VALUE,\n    valueType: parseValueType(data.valueType),\n    value: data.value,\n    ...(processValue === \"none\"\n      ? { processValue }\n      : { processValue, period: parseIntOr(data.period, 0) }), // Object spread. It will merge the properties of the two objects.\n    ...modulePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class SimpleValue extends Item<SimpleValueProps> {\n  protected createDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.className = \"simple-value\";\n\n    if (this.props.valueType === \"image\") {\n      const img = document.createElement(\"img\");\n      img.src = this.props.value;\n      element.append(img);\n    } else {\n      // Add the value to the label and show it.\n      let text = this.props.value;\n      if (this.props.label) {\n        text = this.props.label.replace(/\\(?_VALUE_\\)?/i, text);\n      }\n\n      element.innerHTML = text;\n    }\n\n    return element;\n  }\n\n  /**\n   * @override Item.createLabelDomElement\n   * Create a new label for the visual console item.\n   * @return Item label.\n   */\n  protected createLabelDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.className = \"visual-console-item-label\";\n    // Always return an empty label.\n    return element;\n  }\n}\n","import { UnknownObject, WithModuleProps } from \"../types\";\nimport {\n  modulePropsDecoder,\n  parseIntOr,\n  decodeBase64,\n  stringIsEmpty\n} from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type EventsHistoryProps = {\n  type: ItemType.AUTO_SLA_GRAPH;\n  maxTime: number | null;\n  html: string;\n} & ItemProps &\n  WithModuleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the events history props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function eventsHistoryPropsDecoder(\n  data: UnknownObject\n): EventsHistoryProps | never {\n  if (stringIsEmpty(data.html) && stringIsEmpty(data.encodedHtml)) {\n    throw new TypeError(\"missing html content.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.AUTO_SLA_GRAPH,\n    maxTime: parseIntOr(data.maxTime, null),\n    html: !stringIsEmpty(data.html)\n      ? data.html\n      : decodeBase64(data.encodedHtml),\n    ...modulePropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class EventsHistory extends Item<EventsHistoryProps> {\n  protected createDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.innerHTML = this.props.html;\n\n    return element;\n  }\n}\n","import {\n  LinkedVisualConsoleProps,\n  UnknownObject,\n  WithModuleProps\n} from \"../types\";\nimport {\n  linkedVCPropsDecoder,\n  modulePropsDecoder,\n  notEmptyStringOr,\n  parseIntOr,\n  parseFloatOr\n} from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type PercentileProps = {\n  type: ItemType.PERCENTILE_BAR;\n  percentileType:\n    | \"progress-bar\"\n    | \"bubble\"\n    | \"circular-progress-bar\"\n    | \"circular-progress-bar-alt\";\n  valueType: \"percent\" | \"value\";\n  minValue: number | null;\n  maxValue: number | null;\n  color: string | null;\n  labelColor: string | null;\n  value: number | null;\n  unit: string | null;\n} & ItemProps &\n  WithModuleProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Extract a valid enum value from a raw type value.\n * @param type Raw value.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractPercentileType(type: any): PercentileProps[\"percentileType\"] {\n  switch (type) {\n    case \"progress-bar\":\n    case \"bubble\":\n    case \"circular-progress-bar\":\n    case \"circular-progress-bar-alt\":\n      return type;\n    default:\n    case ItemType.PERCENTILE_BAR:\n      return \"progress-bar\";\n    case ItemType.PERCENTILE_BUBBLE:\n      return \"bubble\";\n    case ItemType.CIRCULAR_PROGRESS_BAR:\n      return \"circular-progress-bar\";\n    case ItemType.CIRCULAR_INTERIOR_PROGRESS_BAR:\n      return \"circular-progress-bar-alt\";\n  }\n}\n\n/**\n * Extract a valid enum value from a raw value type value.\n * @param type Raw value.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractValueType(valueType: any): PercentileProps[\"valueType\"] {\n  switch (valueType) {\n    case \"percent\":\n    case \"value\":\n      return valueType;\n    default:\n      return \"percent\";\n  }\n}\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the percentile props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function percentilePropsDecoder(\n  data: UnknownObject\n): PercentileProps | never {\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.PERCENTILE_BAR,\n    percentileType: extractPercentileType(data.percentileType || data.type),\n    valueType: extractValueType(data.valueType),\n    minValue: parseIntOr(data.minValue, null),\n    maxValue: parseIntOr(data.maxValue, null),\n    color: notEmptyStringOr(data.color, null),\n    labelColor: notEmptyStringOr(data.labelColor, null),\n    value: parseFloatOr(data.value, null),\n    unit: notEmptyStringOr(data.unit, null),\n    ...modulePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\n\nexport default class Percentile extends Item<PercentileProps> {\n  protected createDomElement(): HTMLElement {\n    const colors = {\n      background: \"#000000\",\n      progress: this.props.color || \"#F0F0F0\",\n      text: this.props.labelColor || \"#444444\"\n    };\n    // Progress.\n    const progress = this.getProgress();\n    // Main element.\n    const element = document.createElement(\"div\");\n    // SVG container.\n    const svg = document.createElementNS(svgNS, \"svg\");\n\n    switch (this.props.percentileType) {\n      case \"progress-bar\":\n        {\n          const backgroundRect = document.createElementNS(svgNS, \"rect\");\n          backgroundRect.setAttribute(\"fill\", colors.background);\n          backgroundRect.setAttribute(\"fill-opacity\", \"0.5\");\n          backgroundRect.setAttribute(\"width\", \"100\");\n          backgroundRect.setAttribute(\"height\", \"20\");\n          backgroundRect.setAttribute(\"rx\", \"5\");\n          backgroundRect.setAttribute(\"ry\", \"5\");\n          const progressRect = document.createElementNS(svgNS, \"rect\");\n          progressRect.setAttribute(\"fill\", colors.progress);\n          progressRect.setAttribute(\"fill-opacity\", \"1\");\n          progressRect.setAttribute(\"width\", `${progress}`);\n          progressRect.setAttribute(\"height\", \"20\");\n          progressRect.setAttribute(\"rx\", \"5\");\n          progressRect.setAttribute(\"ry\", \"5\");\n          const text = document.createElementNS(svgNS, \"text\");\n          text.setAttribute(\"text-anchor\", \"middle\");\n          text.setAttribute(\"alignment-baseline\", \"middle\");\n          text.setAttribute(\"font-size\", \"12\");\n          text.setAttribute(\"font-family\", \"arial\");\n          text.setAttribute(\"font-weight\", \"bold\");\n          text.setAttribute(\"transform\", \"translate(50 11)\");\n          text.setAttribute(\"fill\", colors.text);\n\n          if (this.props.valueType === \"value\") {\n            text.textContent = this.props.unit\n              ? `${this.props.value} ${this.props.unit}`\n              : `${this.props.value}`;\n          } else {\n            text.textContent = `${progress}%`;\n          }\n\n          // Auto resize SVG using the view box magic: https://css-tricks.com/scale-svg/\n          svg.setAttribute(\"viewBox\", \"0 0 100 20\");\n          svg.append(backgroundRect, progressRect, text);\n        }\n        break;\n      case \"bubble\":\n      case \"circular-progress-bar\": // TODO: Add this chart.\n      case \"circular-progress-bar-alt\": // TODO: Add this chart.\n        {\n          const backgroundCircle = document.createElementNS(svgNS, \"circle\");\n          backgroundCircle.setAttribute(\"transform\", \"translate(50 50)\");\n          backgroundCircle.setAttribute(\"fill\", colors.background);\n          backgroundCircle.setAttribute(\"fill-opacity\", \"0.5\");\n          backgroundCircle.setAttribute(\"r\", \"50\");\n          const progressCircle = document.createElementNS(svgNS, \"circle\");\n          progressCircle.setAttribute(\"transform\", \"translate(50 50)\");\n          progressCircle.setAttribute(\"fill\", colors.progress);\n          progressCircle.setAttribute(\"fill-opacity\", \"1\");\n          progressCircle.setAttribute(\"r\", `${progress / 2}`);\n          const text = document.createElementNS(svgNS, \"text\");\n          text.setAttribute(\"text-anchor\", \"middle\");\n          text.setAttribute(\"alignment-baseline\", \"middle\");\n          text.setAttribute(\"font-size\", \"16\");\n          text.setAttribute(\"font-family\", \"arial\");\n          text.setAttribute(\"font-weight\", \"bold\");\n          text.setAttribute(\"fill\", colors.text);\n\n          if (this.props.valueType === \"value\") {\n            if (this.props.unit && this.props.unit.length > 0) {\n              const value = document.createElementNS(svgNS, \"tspan\");\n              value.setAttribute(\"x\", \"0\");\n              value.setAttribute(\"dy\", \"1em\");\n              value.textContent = `${this.props.value}`;\n              const unit = document.createElementNS(svgNS, \"tspan\");\n              unit.setAttribute(\"x\", \"0\");\n              unit.setAttribute(\"dy\", \"1em\");\n              unit.textContent = `${this.props.unit}`;\n              text.append(value, unit);\n              text.setAttribute(\"transform\", \"translate(50 33)\");\n            } else {\n              text.textContent = `${this.props.value}`;\n              text.setAttribute(\"transform\", \"translate(50 50)\");\n            }\n          } else {\n            text.textContent = `${progress}%`;\n            text.setAttribute(\"transform\", \"translate(50 50)\");\n          }\n\n          // Auto resize SVG using the view box magic: https://css-tricks.com/scale-svg/\n          svg.setAttribute(\"viewBox\", \"0 0 100 100\");\n          svg.append(backgroundCircle, progressCircle, text);\n        }\n        break;\n    }\n\n    element.append(svg);\n\n    return element;\n  }\n\n  private getProgress(): number {\n    const minValue = this.props.minValue || 0;\n    const maxValue = this.props.maxValue || 100;\n    const value = this.props.value || 100;\n\n    if (value <= minValue) return 0;\n    else if (value >= maxValue) return 100;\n    else return ((value - minValue) / (maxValue - minValue)) * 100;\n  }\n}\n","import {\n  LinkedVisualConsoleProps,\n  UnknownObject,\n  WithModuleProps\n} from \"../types\";\nimport {\n  linkedVCPropsDecoder,\n  modulePropsDecoder,\n  decodeBase64,\n  stringIsEmpty\n} from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type DonutGraphProps = {\n  type: ItemType.DONUT_GRAPH;\n  html: string;\n} & ItemProps &\n  WithModuleProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the donut graph props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function donutGraphPropsDecoder(\n  data: UnknownObject\n): DonutGraphProps | never {\n  if (stringIsEmpty(data.html) && stringIsEmpty(data.encodedHtml)) {\n    throw new TypeError(\"missing html content.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.DONUT_GRAPH,\n    html: !stringIsEmpty(data.html)\n      ? data.html\n      : decodeBase64(data.encodedHtml),\n    ...modulePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class DonutGraph extends Item<DonutGraphProps> {\n  protected createDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.innerHTML = this.props.html;\n\n    return element;\n  }\n}\n","import { UnknownObject, WithModuleProps } from \"../types\";\nimport { modulePropsDecoder, decodeBase64, stringIsEmpty } from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type BarsGraphProps = {\n  type: ItemType.BARS_GRAPH;\n  html: string;\n} & ItemProps &\n  WithModuleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the bars graph props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function barsGraphPropsDecoder(\n  data: UnknownObject\n): BarsGraphProps | never {\n  if (stringIsEmpty(data.html) && stringIsEmpty(data.encodedHtml)) {\n    throw new TypeError(\"missing html content.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.BARS_GRAPH,\n    html: !stringIsEmpty(data.html)\n      ? data.html\n      : decodeBase64(data.encodedHtml),\n    ...modulePropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class BarsGraph extends Item<BarsGraphProps> {\n  protected createDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.innerHTML = this.props.html;\n\n    return element;\n  }\n}\n","import {\n  LinkedVisualConsoleProps,\n  UnknownObject,\n  WithModuleProps\n} from \"../types\";\nimport {\n  linkedVCPropsDecoder,\n  modulePropsDecoder,\n  decodeBase64,\n  stringIsEmpty\n} from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type ModuleGraphProps = {\n  type: ItemType.MODULE_GRAPH;\n  html: string;\n} & ItemProps &\n  WithModuleProps &\n  LinkedVisualConsoleProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the module graph props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function moduleGraphPropsDecoder(\n  data: UnknownObject\n): ModuleGraphProps | never {\n  if (stringIsEmpty(data.html) && stringIsEmpty(data.encodedHtml)) {\n    throw new TypeError(\"missing html content.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.MODULE_GRAPH,\n    html: !stringIsEmpty(data.html)\n      ? data.html\n      : decodeBase64(data.encodedHtml),\n    ...modulePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    ...linkedVCPropsDecoder(data) // Object spread. It will merge the properties of the two objects.\n  };\n}\n\nexport default class ModuleGraph extends Item<ModuleGraphProps> {\n  protected createDomElement(): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.innerHTML = this.props.html;\n\n    return element;\n  }\n}\n","import { UnknownObject } from \"../types\";\nimport {\n  stringIsEmpty,\n  notEmptyStringOr,\n  decodeBase64,\n  parseIntOr\n} from \"../lib\";\nimport Item, { ItemType, ItemProps, itemBasePropsDecoder } from \"../Item\";\n\nexport type ServiceProps = {\n  type: ItemType.SERVICE;\n  serviceId: number;\n  imageSrc: string | null;\n  statusImageSrc: string | null;\n  encodedTitle: string | null;\n} & ItemProps;\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the service props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function servicePropsDecoder(data: UnknownObject): ServiceProps | never {\n  if (data.imageSrc !== null) {\n    if (\n      typeof data.statusImageSrc !== \"string\" ||\n      data.imageSrc.statusImageSrc === 0\n    ) {\n      throw new TypeError(\"invalid status image src.\");\n    }\n  } else {\n    if (stringIsEmpty(data.encodedTitle)) {\n      throw new TypeError(\"missing encode tittle content.\");\n    }\n  }\n\n  if (parseIntOr(data.serviceId, null) === null) {\n    throw new TypeError(\"invalid service id.\");\n  }\n\n  return {\n    ...itemBasePropsDecoder(data), // Object spread. It will merge the properties of the two objects.\n    type: ItemType.SERVICE,\n    serviceId: data.serviceId,\n    imageSrc: notEmptyStringOr(data.imageSrc, null),\n    statusImageSrc: notEmptyStringOr(data.statusImageSrc, null),\n    encodedTitle: notEmptyStringOr(data.encodedTitle, null)\n  };\n}\n\nexport default class Service extends Item<ServiceProps> {\n  public createDomElement(): HTMLElement {\n    const img: HTMLImageElement = document.createElement(\"img\");\n    if (this.props.statusImageSrc !== null) {\n      img.className = \"icon\";\n      img.src = this.props.statusImageSrc;\n    } else {\n      if (this.props.encodedTitle !== null) {\n        const element = document.createElement(\"div\");\n        element.innerHTML = decodeBase64(this.props.encodedTitle);\n        return element;\n      }\n    }\n    return img;\n  }\n}\n","import { UnknownObject, Size } from \"./types\";\nimport {\n  parseBoolean,\n  sizePropsDecoder,\n  parseIntOr,\n  notEmptyStringOr\n} from \"./lib\";\nimport Item, {\n  ItemType,\n  ItemProps,\n  ItemClickEvent,\n  ItemRemoveEvent\n} from \"./Item\";\nimport StaticGraph, { staticGraphPropsDecoder } from \"./items/StaticGraph\";\nimport Icon, { iconPropsDecoder } from \"./items/Icon\";\nimport ColorCloud, { colorCloudPropsDecoder } from \"./items/ColorCloud\";\nimport Group, { groupPropsDecoder } from \"./items/Group\";\nimport Clock, { clockPropsDecoder } from \"./items/Clock\";\nimport Box, { boxPropsDecoder } from \"./items/Box\";\nimport Line, { linePropsDecoder } from \"./items/Line\";\nimport Label, { labelPropsDecoder } from \"./items/Label\";\nimport SimpleValue, { simpleValuePropsDecoder } from \"./items/SimpleValue\";\nimport EventsHistory, {\n  eventsHistoryPropsDecoder\n} from \"./items/EventsHistory\";\nimport Percentile, { percentilePropsDecoder } from \"./items/Percentile\";\nimport TypedEvent, { Disposable, Listener } from \"./TypedEvent\";\nimport DonutGraph, { donutGraphPropsDecoder } from \"./items/DonutGraph\";\nimport BarsGraph, { barsGraphPropsDecoder } from \"./items/BarsGraph\";\nimport ModuleGraph, { moduleGraphPropsDecoder } from \"./items/ModuleGraph\";\nimport Service, { servicePropsDecoder } from \"./items/Service\";\n\n// TODO: Document.\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction itemInstanceFrom(data: UnknownObject) {\n  const type = parseIntOr(data.type, null);\n  if (type == null) throw new TypeError(\"missing item type.\");\n\n  switch (type as ItemType) {\n    case ItemType.STATIC_GRAPH:\n      return new StaticGraph(staticGraphPropsDecoder(data));\n    case ItemType.MODULE_GRAPH:\n      return new ModuleGraph(moduleGraphPropsDecoder(data));\n    case ItemType.SIMPLE_VALUE:\n    case ItemType.SIMPLE_VALUE_MAX:\n    case ItemType.SIMPLE_VALUE_MIN:\n    case ItemType.SIMPLE_VALUE_AVG:\n      return new SimpleValue(simpleValuePropsDecoder(data));\n    case ItemType.PERCENTILE_BAR:\n    case ItemType.PERCENTILE_BUBBLE:\n    case ItemType.CIRCULAR_PROGRESS_BAR:\n    case ItemType.CIRCULAR_INTERIOR_PROGRESS_BAR:\n      return new Percentile(percentilePropsDecoder(data));\n    case ItemType.LABEL:\n      return new Label(labelPropsDecoder(data));\n    case ItemType.ICON:\n      return new Icon(iconPropsDecoder(data));\n    case ItemType.SERVICE:\n      return new Service(servicePropsDecoder(data));\n    case ItemType.GROUP_ITEM:\n      return new Group(groupPropsDecoder(data));\n    case ItemType.BOX_ITEM:\n      return new Box(boxPropsDecoder(data));\n    case ItemType.LINE_ITEM:\n      return new Line(linePropsDecoder(data));\n    case ItemType.AUTO_SLA_GRAPH:\n      return new EventsHistory(eventsHistoryPropsDecoder(data));\n    case ItemType.DONUT_GRAPH:\n      return new DonutGraph(donutGraphPropsDecoder(data));\n    case ItemType.BARS_GRAPH:\n      return new BarsGraph(barsGraphPropsDecoder(data));\n    case ItemType.CLOCK:\n      return new Clock(clockPropsDecoder(data));\n    case ItemType.COLOR_CLOUD:\n      return new ColorCloud(colorCloudPropsDecoder(data));\n    default:\n      throw new TypeError(\"item not found\");\n  }\n}\n\n// TODO: Document.\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction decodeProps(data: UnknownObject) {\n  const type = parseIntOr(data.type, null);\n  if (type == null) throw new TypeError(\"missing item type.\");\n\n  switch (type as ItemType) {\n    case ItemType.STATIC_GRAPH:\n      return staticGraphPropsDecoder(data);\n    case ItemType.MODULE_GRAPH:\n      return moduleGraphPropsDecoder(data);\n    case ItemType.SIMPLE_VALUE:\n    case ItemType.SIMPLE_VALUE_MAX:\n    case ItemType.SIMPLE_VALUE_MIN:\n    case ItemType.SIMPLE_VALUE_AVG:\n      return simpleValuePropsDecoder(data);\n    case ItemType.PERCENTILE_BAR:\n    case ItemType.PERCENTILE_BUBBLE:\n    case ItemType.CIRCULAR_PROGRESS_BAR:\n    case ItemType.CIRCULAR_INTERIOR_PROGRESS_BAR:\n      return percentilePropsDecoder(data);\n    case ItemType.LABEL:\n      return labelPropsDecoder(data);\n    case ItemType.ICON:\n      return iconPropsDecoder(data);\n    case ItemType.SERVICE:\n      return servicePropsDecoder(data);\n    case ItemType.GROUP_ITEM:\n      return groupPropsDecoder(data);\n    case ItemType.BOX_ITEM:\n      return boxPropsDecoder(data);\n    case ItemType.LINE_ITEM:\n      return linePropsDecoder(data);\n    case ItemType.AUTO_SLA_GRAPH:\n      return eventsHistoryPropsDecoder(data);\n    case ItemType.DONUT_GRAPH:\n      return donutGraphPropsDecoder(data);\n    case ItemType.BARS_GRAPH:\n      return barsGraphPropsDecoder(data);\n    case ItemType.CLOCK:\n      return clockPropsDecoder(data);\n    case ItemType.COLOR_CLOUD:\n      return colorCloudPropsDecoder(data);\n    default:\n      throw new TypeError(\"decoder not found\");\n  }\n}\n\n// Base properties.\nexport interface VisualConsoleProps extends Size {\n  readonly id: number;\n  name: string;\n  groupId: number;\n  backgroundURL: string | null; // URL?\n  backgroundColor: string | null;\n  isFavorite: boolean;\n  relationLineWidth: number;\n}\n\n/**\n * Build a valid typed object from a raw object.\n * This will allow us to ensure the type safety.\n *\n * @param data Raw object.\n * @return An object representing the Visual Console props.\n * @throws Will throw a TypeError if some property\n * is missing from the raw object or have an invalid type.\n */\nexport function visualConsolePropsDecoder(\n  data: UnknownObject\n): VisualConsoleProps | never {\n  // Object destructuring: http://es6-features.org/#ObjectMatchingShorthandNotation\n  const {\n    id,\n    name,\n    groupId,\n    backgroundURL,\n    backgroundColor,\n    isFavorite,\n    relationLineWidth\n  } = data;\n\n  if (id == null || isNaN(parseInt(id))) {\n    throw new TypeError(\"invalid Id.\");\n  }\n  if (typeof name !== \"string\" || name.length === 0) {\n    throw new TypeError(\"invalid name.\");\n  }\n  if (groupId == null || isNaN(parseInt(groupId))) {\n    throw new TypeError(\"invalid group Id.\");\n  }\n\n  return {\n    id: parseInt(id),\n    name,\n    groupId: parseInt(groupId),\n    backgroundURL: notEmptyStringOr(backgroundURL, null),\n    backgroundColor: notEmptyStringOr(backgroundColor, null),\n    isFavorite: parseBoolean(isFavorite),\n    relationLineWidth: parseIntOr(relationLineWidth, 0),\n    ...sizePropsDecoder(data)\n  };\n}\n\nexport default class VisualConsole {\n  // Reference to the DOM element which will contain the items.\n  private readonly containerRef: HTMLElement;\n  // Properties.\n  private _props: VisualConsoleProps;\n  // Visual Console Item instances by their Id.\n  private elementsById: {\n    [key: number]: Item<ItemProps>;\n  } = {};\n  // Visual Console Item Ids.\n  private elementIds: ItemProps[\"id\"][] = [];\n  // Dictionary which store the created lines.\n  private relations: {\n    [key: string]: Line;\n  } = {};\n  // Event manager for click events.\n  private readonly clickEventManager = new TypedEvent<\n    ItemClickEvent<ItemProps>\n  >();\n  // List of references to clean the event listeners.\n  private readonly disposables: Disposable[] = [];\n\n  /**\n   * React to a click on an element.\n   * @param e Event object.\n   */\n  private handleElementClick: (e: ItemClickEvent<ItemProps>) => void = e => {\n    this.clickEventManager.emit(e);\n    // console.log(`Clicked element #${e.data.id}`, e);\n  };\n\n  /**\n   * Clear some element references.\n   * @param e Event object.\n   */\n  private handleElementRemove: (e: ItemRemoveEvent<ItemProps>) => void = e => {\n    // Remove the element from the list and its relations.\n    this.elementIds = this.elementIds.filter(id => id !== e.data.id);\n    delete this.elementsById[e.data.id];\n    this.clearRelations(e.data.id);\n  };\n\n  public constructor(\n    container: HTMLElement,\n    props: UnknownObject,\n    items: UnknownObject[]\n  ) {\n    this.containerRef = container;\n    this._props = visualConsolePropsDecoder(props);\n\n    // Force the first render.\n    this.render();\n\n    // Sort by isOnTop, id ASC\n    items = items.sort(function(a, b) {\n      if (\n        a.isOnTop == null ||\n        b.isOnTop == null ||\n        a.id == null ||\n        b.id == null\n      ) {\n        return 0;\n      }\n\n      if (a.isOnTop && !b.isOnTop) return 1;\n      else if (!a.isOnTop && b.isOnTop) return -1;\n      else if (a.id < b.id) return 1;\n      else return -1;\n    });\n\n    // Initialize the items.\n    items.forEach(item => {\n      try {\n        const itemInstance = itemInstanceFrom(item);\n        // Add the item to the list.\n        this.elementsById[itemInstance.props.id] = itemInstance;\n        this.elementIds.push(itemInstance.props.id);\n        // Item event handlers.\n        itemInstance.onClick(this.handleElementClick);\n        itemInstance.onRemove(this.handleElementRemove);\n        // Add the item to the DOM.\n        this.containerRef.append(itemInstance.elementRef);\n      } catch (error) {\n        console.log(\"Error creating a new element:\", error.message);\n      }\n    });\n\n    // Create lines.\n    this.buildRelations();\n  }\n\n  /**\n   * Public accessor of the `elements` property.\n   * @return Properties.\n   */\n  public get elements(): Item<ItemProps>[] {\n    // Ensure the type cause Typescript doesn't know the filter removes null items.\n    return this.elementIds\n      .map(id => this.elementsById[id])\n      .filter(_ => _ != null) as Item<ItemProps>[];\n  }\n\n  /**\n   * Public setter of the `elements` property.\n   * @param items.\n   */\n  public updateElements(items: UnknownObject[]): void {\n    const itemIds = items.map(item => item.id || null).filter(id => id != null);\n    itemIds as number[]; // Tell the type system to rely on us.\n    // Get the elements we should delete.\n    const deletedIds: number[] = this.elementIds.filter(\n      id => itemIds.indexOf(id) < 0\n    );\n    // Delete the elements.\n    deletedIds.forEach(id => {\n      if (this.elementsById[id] != null) {\n        this.elementsById[id].remove();\n        delete this.elementsById[id];\n      }\n    });\n    // Replace the element ids.\n    this.elementIds = itemIds;\n\n    // Initialize the items.\n    items.forEach(item => {\n      if (item.id) {\n        if (this.elementsById[item.id] == null) {\n          // New item.\n          try {\n            const itemInstance = itemInstanceFrom(item);\n            // Add the item to the list.\n            this.elementsById[itemInstance.props.id] = itemInstance;\n            // Item event handlers.\n            itemInstance.onClick(this.handleElementClick);\n            itemInstance.onRemove(this.handleElementRemove);\n            // Add the item to the DOM.\n            this.containerRef.append(itemInstance.elementRef);\n          } catch (error) {\n            console.log(\"Error creating a new element:\", error.message);\n          }\n        } else {\n          // Update item.\n          try {\n            this.elementsById[item.id].props = decodeProps(item);\n          } catch (error) {\n            console.log(\"Error updating an element:\", error.message);\n          }\n        }\n      }\n    });\n\n    // Re-build relations.\n    this.buildRelations();\n  }\n\n  /**\n   * Public accessor of the `props` property.\n   * @return Properties.\n   */\n  public get props(): VisualConsoleProps {\n    return { ...this._props }; // Return a copy.\n  }\n\n  /**\n   * Public setter of the `props` property.\n   * If the new props are different enough than the\n   * stored props, a render would be fired.\n   * @param newProps\n   */\n  public set props(newProps: VisualConsoleProps) {\n    const prevProps = this.props;\n    // Update the internal props.\n    this._props = newProps;\n\n    // From this point, things which rely on this.props can access to the changes.\n\n    // Re-render.\n    this.render(prevProps);\n  }\n\n  /**\n   * Recreate or update the HTMLElement which represents the Visual Console into the DOM.\n   * @param prevProps If exists it will be used to only DOM updates instead of a full replace.\n   */\n  public render(prevProps: VisualConsoleProps | null = null): void {\n    if (prevProps) {\n      if (prevProps.backgroundURL !== this.props.backgroundURL) {\n        this.containerRef.style.backgroundImage = `url(${\n          this.props.backgroundURL\n        })`;\n      }\n      if (prevProps.backgroundColor !== this.props.backgroundColor) {\n        this.containerRef.style.backgroundColor = this.props.backgroundColor;\n      }\n      if (this.sizeChanged(prevProps, this.props)) {\n        this.resizeElement(this.props.width, this.props.height);\n      }\n    } else {\n      this.containerRef.style.backgroundImage = `url(${\n        this.props.backgroundURL\n      })`;\n      this.containerRef.style.backgroundColor = this.props.backgroundColor;\n      this.resizeElement(this.props.width, this.props.height);\n    }\n  }\n\n  /**\n   * Compare the previous and the new size and return\n   * a boolean value in case the size changed.\n   * @param prevSize\n   * @param newSize\n   * @return Whether the size changed or not.\n   */\n  public sizeChanged(prevSize: Size, newSize: Size): boolean {\n    return (\n      prevSize.width !== newSize.width || prevSize.height !== newSize.height\n    );\n  }\n\n  /**\n   * Resize the DOM container.\n   * @param width\n   * @param height\n   */\n  public resizeElement(width: number, height: number): void {\n    this.containerRef.style.width = `${width}px`;\n    this.containerRef.style.height = `${height}px`;\n  }\n\n  /**\n   * Update the size into the properties and resize the DOM container.\n   * @param width\n   * @param height\n   */\n  public resize(width: number, height: number): void {\n    this.props = {\n      ...this.props, // Object spread: http://es6-features.org/#SpreadOperator\n      width,\n      height\n    };\n  }\n\n  /**\n   * To remove the event listeners and the elements from the DOM.\n   */\n  public remove(): void {\n    this.disposables.forEach(d => d.dispose()); // Arrow function.\n    this.elements.forEach(e => e.remove()); // Arrow function.\n    this.elementsById = {};\n    this.elementIds = [];\n    // Clear relations.\n    this.clearRelations();\n    // Clean container.\n    this.containerRef.innerHTML = \"\";\n  }\n\n  /**\n   * Create line elements which connect the elements with their parents.\n   */\n  private buildRelations(): void {\n    // Clear relations.\n    this.clearRelations();\n    // Add relations.\n    this.elements.forEach(item => {\n      if (item.props.parentId !== null) {\n        const parent = this.elementsById[item.props.parentId];\n        const child = this.elementsById[item.props.id];\n        if (parent && child) this.addRelationLine(parent, child);\n      }\n    });\n  }\n\n  /**\n   * @param itemId Optional identifier of a parent or child item.\n   * Remove the line elements which connect the elements with their parents.\n   */\n  private clearRelations(itemId?: number): void {\n    if (itemId != null) {\n      for (let key in this.relations) {\n        const ids = key.split(\"|\");\n        const parentId = Number.parseInt(ids[0]);\n        const childId = Number.parseInt(ids[1]);\n\n        if (itemId === parentId || itemId === childId) {\n          this.relations[key].remove();\n          delete this.relations[key];\n        }\n      }\n    } else {\n      for (let key in this.relations) {\n        this.relations[key].remove();\n        delete this.relations[key];\n      }\n    }\n  }\n\n  /**\n   * Retrieve the line element which represent the relation between items.\n   * @param parentId Identifier of the parent item.\n   * @param childId Itentifier of the child item.\n   * @return The line element or nothing.\n   */\n  private getRelationLine(parentId: number, childId: number): Line | null {\n    const identifier = `${parentId}|${childId}`;\n    return this.relations[identifier] || null;\n  }\n\n  /**\n   * Add a new line item to represent a relation between the items.\n   * @param parent Parent item.\n   * @param child Child item.\n   * @return Whether the line was added or not.\n   */\n  private addRelationLine(\n    parent: Item<ItemProps>,\n    child: Item<ItemProps>\n  ): Line {\n    const identifier = `${parent.props.id}|${child.props.id}`;\n    if (this.relations[identifier] != null) {\n      this.relations[identifier].remove();\n    }\n\n    // Get the items center.\n    const startX = parent.props.x + parent.elementRef.clientWidth / 2;\n    const startY =\n      parent.props.y +\n      (parent.elementRef.clientHeight - parent.labelElementRef.clientHeight) /\n        2;\n    const endX = child.props.x + child.elementRef.clientWidth / 2;\n    const endY =\n      child.props.y +\n      (child.elementRef.clientHeight - child.labelElementRef.clientHeight) / 2;\n\n    const line = new Line(\n      linePropsDecoder({\n        id: 0,\n        type: ItemType.LINE_ITEM,\n        startX,\n        startY,\n        endX,\n        endY,\n        width: 0,\n        height: 0,\n        lineWidth: this.props.relationLineWidth,\n        color: \"#CCCCCC\"\n      })\n    );\n    // Save a reference to the line item.\n    this.relations[identifier] = line;\n\n    // Add the line to the DOM.\n    line.elementRef.style.zIndex = \"0\";\n    this.containerRef.append(line.elementRef);\n\n    return line;\n  }\n\n  /**\n   * Add an event handler to the click of the linked visual console elements.\n   * @param listener Function which is going to be executed when a linked console is clicked.\n   */\n  public onClick(listener: Listener<ItemClickEvent<ItemProps>>): Disposable {\n    /*\n     * The '.on' function returns a function which will clean the event\n     * listener when executed. We store all the 'dispose' functions to\n     * call them when the item should be cleared.\n     */\n    const disposable = this.clickEventManager.on(listener);\n    this.disposables.push(disposable);\n\n    return disposable;\n  }\n}\n","/*\n * Useful resources.\n * http://es6-features.org/\n * http://exploringjs.com/es6\n * https://www.typescriptlang.org/\n */\n\nimport \"./main.css\"; // CSS import.\nimport VisualConsole from \"./VisualConsole\";\n\n// Export the VisualConsole class to the global object.\n\n// eslint-disable-next-line\n(window as any).VisualConsole = VisualConsole;\n"],"sourceRoot":""}